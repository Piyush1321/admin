{"ast":null,"code":"ace.define(\"ace/mode/folding/coffee\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n  var Range = acequire(\"../../range\").Range;\n\n  var FoldMode = exports.FoldMode = function () {};\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var range = this.indentationBlock(session, row);\n      if (range) return range;\n      var re = /\\S/;\n      var line = session.getLine(row);\n      var startLevel = line.search(re);\n      if (startLevel == -1 || line[startLevel] != \"#\") return;\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var level = line.search(re);\n        if (level == -1) continue;\n        if (line[level] != \"#\") break;\n        endRow = row;\n      }\n\n      if (endRow > startRow) {\n        var endColumn = session.getLine(endRow).length;\n        return new Range(startRow, startColumn, endRow, endColumn);\n      }\n    };\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var indent = line.search(/\\S/);\n      var next = session.getLine(row + 1);\n      var prev = session.getLine(row - 1);\n      var prevIndent = prev.search(/\\S/);\n      var nextIndent = next.search(/\\S/);\n\n      if (indent == -1) {\n        session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n        return \"\";\n      }\n\n      if (prevIndent == -1) {\n        if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n          session.foldWidgets[row - 1] = \"\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"start\";\n        }\n      } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n        if (session.getLine(row - 2).search(/\\S/) == -1) {\n          session.foldWidgets[row - 1] = \"start\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"\";\n        }\n      }\n\n      if (prevIndent != -1 && prevIndent < indent) session.foldWidgets[row - 1] = \"start\";else session.foldWidgets[row - 1] = \"\";\n      if (indent < nextIndent) return \"start\";else return \"\";\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/snippets\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/text_highlight_rules\", \"ace/mode/folding/coffee\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var SnippetHighlightRules = function () {\n    var builtins = \"SELECTION|CURRENT_WORD|SELECTED_TEXT|CURRENT_LINE|LINE_INDEX|\" + \"LINE_NUMBER|SOFT_TABS|TAB_SIZE|FILENAME|FILEPATH|FULLNAME\";\n    this.$rules = {\n      \"start\": [{\n        token: \"constant.language.escape\",\n        regex: /\\\\[\\$}`\\\\]/\n      }, {\n        token: \"keyword\",\n        regex: \"\\\\$(?:TM_)?(?:\" + builtins + \")\\\\b\"\n      }, {\n        token: \"variable\",\n        regex: \"\\\\$\\\\w+\"\n      }, {\n        onMatch: function (value, state, stack) {\n          if (stack[1]) stack[1]++;else stack.unshift(state, 1);\n          return this.tokenName;\n        },\n        tokenName: \"markup.list\",\n        regex: \"\\\\${\",\n        next: \"varDecl\"\n      }, {\n        onMatch: function (value, state, stack) {\n          if (!stack[1]) return \"text\";\n          stack[1]--;\n          if (!stack[1]) stack.splice(0, 2);\n          return this.tokenName;\n        },\n        tokenName: \"markup.list\",\n        regex: \"}\"\n      }, {\n        token: \"doc.comment\",\n        regex: /^\\${2}-{5,}$/\n      }],\n      \"varDecl\": [{\n        regex: /\\d+\\b/,\n        token: \"constant.numeric\"\n      }, {\n        token: \"keyword\",\n        regex: \"(?:TM_)?(?:\" + builtins + \")\\\\b\"\n      }, {\n        token: \"variable\",\n        regex: \"\\\\w+\"\n      }, {\n        regex: /:/,\n        token: \"punctuation.operator\",\n        next: \"start\"\n      }, {\n        regex: /\\//,\n        token: \"string.regex\",\n        next: \"regexp\"\n      }, {\n        regex: \"\",\n        next: \"start\"\n      }],\n      \"regexp\": [{\n        regex: /\\\\./,\n        token: \"escape\"\n      }, {\n        regex: /\\[/,\n        token: \"regex.start\",\n        next: \"charClass\"\n      }, {\n        regex: \"/\",\n        token: \"string.regex\",\n        next: \"format\"\n      }, {\n        \"token\": \"string.regex\",\n        regex: \".\"\n      }],\n      charClass: [{\n        regex: \"\\\\.\",\n        token: \"escape\"\n      }, {\n        regex: \"\\\\]\",\n        token: \"regex.end\",\n        next: \"regexp\"\n      }, {\n        \"token\": \"string.regex\",\n        regex: \".\"\n      }],\n      \"format\": [{\n        regex: /\\\\[ulULE]/,\n        token: \"keyword\"\n      }, {\n        regex: /\\$\\d+/,\n        token: \"variable\"\n      }, {\n        regex: \"/[gim]*:?\",\n        token: \"string.regex\",\n        next: \"start\"\n      }, {\n        \"token\": \"string\",\n        regex: \".\"\n      }]\n    };\n  };\n\n  oop.inherits(SnippetHighlightRules, TextHighlightRules);\n  exports.SnippetHighlightRules = SnippetHighlightRules;\n\n  var SnippetGroupHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"text\",\n        regex: \"^\\\\t\",\n        next: \"sn-start\"\n      }, {\n        token: \"invalid\",\n        regex: /^ \\s*/\n      }, {\n        token: \"comment\",\n        regex: /^#.*/\n      }, {\n        token: \"constant.language.escape\",\n        regex: \"^regex \",\n        next: \"regex\"\n      }, {\n        token: \"constant.language.escape\",\n        regex: \"^(trigger|endTrigger|name|snippet|guard|endGuard|tabTrigger|key)\\\\b\"\n      }],\n      \"regex\": [{\n        token: \"text\",\n        regex: \"\\\\.\"\n      }, {\n        token: \"keyword\",\n        regex: \"/\"\n      }, {\n        token: \"empty\",\n        regex: \"$\",\n        next: \"start\"\n      }]\n    };\n    this.embedRules(SnippetHighlightRules, \"sn-\", [{\n      token: \"text\",\n      regex: \"^\\\\t\",\n      next: \"sn-start\"\n    }, {\n      onMatch: function (value, state, stack) {\n        stack.splice(stack.length);\n        return this.tokenName;\n      },\n      tokenName: \"text\",\n      regex: \"^(?!\\t)\",\n      next: \"start\"\n    }]);\n  };\n\n  oop.inherits(SnippetGroupHighlightRules, TextHighlightRules);\n  exports.SnippetGroupHighlightRules = SnippetGroupHighlightRules;\n  var FoldMode = acequire(\"./folding/coffee\").FoldMode;\n\n  var Mode = function () {\n    this.HighlightRules = SnippetGroupHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.$indentWithTabs = true;\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/snippets\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});","map":{"version":3,"sources":["/Users/ishwarbaisla/Documents/GitHub/admin/node_modules/brace/mode/snippets.js"],"names":["ace","define","acequire","exports","module","oop","BaseFoldMode","FoldMode","Range","inherits","getFoldWidgetRange","session","foldStyle","row","range","indentationBlock","re","line","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","indent","next","prev","prevIndent","nextIndent","foldWidgets","call","prototype","TextMode","Mode","TextHighlightRules","SnippetHighlightRules","builtins","$rules","token","regex","onMatch","value","state","stack","unshift","tokenName","splice","charClass","SnippetGroupHighlightRules","embedRules","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","$indentWithTabs","lineCommentStart","$id"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar Range = acequire(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/snippets\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/text_highlight_rules\",\"ace/mode/folding/coffee\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar SnippetHighlightRules = function() {\n\n    var builtins = \"SELECTION|CURRENT_WORD|SELECTED_TEXT|CURRENT_LINE|LINE_INDEX|\" +\n        \"LINE_NUMBER|SOFT_TABS|TAB_SIZE|FILENAME|FILEPATH|FULLNAME\";\n\n    this.$rules = {\n        \"start\" : [\n            {token:\"constant.language.escape\", regex: /\\\\[\\$}`\\\\]/},\n            {token:\"keyword\", regex: \"\\\\$(?:TM_)?(?:\" + builtins + \")\\\\b\"},\n            {token:\"variable\", regex: \"\\\\$\\\\w+\"},\n            {onMatch: function(value, state, stack) {\n                if (stack[1])\n                    stack[1]++;\n                else\n                    stack.unshift(state, 1);\n                return this.tokenName;\n            }, tokenName: \"markup.list\", regex: \"\\\\${\", next: \"varDecl\"},\n            {onMatch: function(value, state, stack) {\n                if (!stack[1])\n                    return \"text\";\n                stack[1]--;\n                if (!stack[1])\n                    stack.splice(0,2);\n                return this.tokenName;\n            }, tokenName: \"markup.list\", regex: \"}\"},\n            {token: \"doc.comment\", regex:/^\\${2}-{5,}$/}\n        ],\n        \"varDecl\" : [\n            {regex: /\\d+\\b/, token: \"constant.numeric\"},\n            {token:\"keyword\", regex: \"(?:TM_)?(?:\" + builtins + \")\\\\b\"},\n            {token:\"variable\", regex: \"\\\\w+\"},\n            {regex: /:/, token: \"punctuation.operator\", next: \"start\"},\n            {regex: /\\//, token: \"string.regex\", next: \"regexp\"},\n            {regex: \"\", next: \"start\"}\n        ],\n        \"regexp\" : [\n            {regex: /\\\\./, token: \"escape\"},\n            {regex: /\\[/, token: \"regex.start\", next: \"charClass\"},\n            {regex: \"/\", token: \"string.regex\", next: \"format\"},\n            {\"token\": \"string.regex\", regex:\".\"}\n        ],\n        charClass : [\n            {regex: \"\\\\.\", token: \"escape\"},\n            {regex: \"\\\\]\", token: \"regex.end\", next: \"regexp\"},\n            {\"token\": \"string.regex\", regex:\".\"}\n        ],\n        \"format\" : [\n            {regex: /\\\\[ulULE]/, token: \"keyword\"},\n            {regex: /\\$\\d+/, token: \"variable\"},\n            {regex: \"/[gim]*:?\", token: \"string.regex\", next: \"start\"},\n            {\"token\": \"string\", regex:\".\"}\n        ]\n    };\n};\noop.inherits(SnippetHighlightRules, TextHighlightRules);\n\nexports.SnippetHighlightRules = SnippetHighlightRules;\n\nvar SnippetGroupHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [\n\t\t\t{token: \"text\", regex: \"^\\\\t\", next: \"sn-start\"},\n\t\t\t{token:\"invalid\", regex: /^ \\s*/},\n            {token:\"comment\", regex: /^#.*/},\n            {token:\"constant.language.escape\", regex: \"^regex \", next: \"regex\"},\n            {token:\"constant.language.escape\", regex: \"^(trigger|endTrigger|name|snippet|guard|endGuard|tabTrigger|key)\\\\b\"}\n        ],\n\t\t\"regex\" : [\n\t\t\t{token:\"text\", regex: \"\\\\.\"},\n\t\t\t{token:\"keyword\", regex: \"/\"},\n\t\t\t{token:\"empty\", regex: \"$\", next: \"start\"}\n\t\t]\n    };\n\tthis.embedRules(SnippetHighlightRules, \"sn-\", [\n\t\t{token: \"text\", regex: \"^\\\\t\", next: \"sn-start\"},\n\t\t{onMatch: function(value, state, stack) {\n\t\t\tstack.splice(stack.length);\n\t\t\treturn this.tokenName;\n\t\t}, tokenName: \"text\", regex: \"^(?!\\t)\", next: \"start\"}\n\t]);\n\t\n};\n\noop.inherits(SnippetGroupHighlightRules, TextHighlightRules);\n\nexports.SnippetGroupHighlightRules = SnippetGroupHighlightRules;\n\nvar FoldMode = acequire(\"./folding/coffee\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = SnippetGroupHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.$indentWithTabs = true;\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/snippets\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n\n});\n"]},"metadata":{},"sourceType":"script"}