{"ast":null,"code":"ace.define(\"ace/mode/xml_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var XmlHighlightRules = function (normalize) {\n    var tagRegex = \"[_:a-zA-Z\\xc0-\\uffff][-_:.a-zA-Z0-9\\xc0-\\uffff]*\";\n    this.$rules = {\n      start: [{\n        token: \"string.cdata.xml\",\n        regex: \"<\\\\!\\\\[CDATA\\\\[\",\n        next: \"cdata\"\n      }, {\n        token: [\"punctuation.instruction.xml\", \"keyword.instruction.xml\"],\n        regex: \"(<\\\\?)(\" + tagRegex + \")\",\n        next: \"processing_instruction\"\n      }, {\n        token: \"comment.start.xml\",\n        regex: \"<\\\\!--\",\n        next: \"comment\"\n      }, {\n        token: [\"xml-pe.doctype.xml\", \"xml-pe.doctype.xml\"],\n        regex: \"(<\\\\!)(DOCTYPE)(?=[\\\\s])\",\n        next: \"doctype\",\n        caseInsensitive: true\n      }, {\n        include: \"tag\"\n      }, {\n        token: \"text.end-tag-open.xml\",\n        regex: \"</\"\n      }, {\n        token: \"text.tag-open.xml\",\n        regex: \"<\"\n      }, {\n        include: \"reference\"\n      }, {\n        defaultToken: \"text.xml\"\n      }],\n      processing_instruction: [{\n        token: \"entity.other.attribute-name.decl-attribute-name.xml\",\n        regex: tagRegex\n      }, {\n        token: \"keyword.operator.decl-attribute-equals.xml\",\n        regex: \"=\"\n      }, {\n        include: \"whitespace\"\n      }, {\n        include: \"string\"\n      }, {\n        token: \"punctuation.xml-decl.xml\",\n        regex: \"\\\\?>\",\n        next: \"start\"\n      }],\n      doctype: [{\n        include: \"whitespace\"\n      }, {\n        include: \"string\"\n      }, {\n        token: \"xml-pe.doctype.xml\",\n        regex: \">\",\n        next: \"start\"\n      }, {\n        token: \"xml-pe.xml\",\n        regex: \"[-_a-zA-Z0-9:]+\"\n      }, {\n        token: \"punctuation.int-subset\",\n        regex: \"\\\\[\",\n        push: \"int_subset\"\n      }],\n      int_subset: [{\n        token: \"text.xml\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"punctuation.int-subset.xml\",\n        regex: \"]\",\n        next: \"pop\"\n      }, {\n        token: [\"punctuation.markup-decl.xml\", \"keyword.markup-decl.xml\"],\n        regex: \"(<\\\\!)(\" + tagRegex + \")\",\n        push: [{\n          token: \"text\",\n          regex: \"\\\\s+\"\n        }, {\n          token: \"punctuation.markup-decl.xml\",\n          regex: \">\",\n          next: \"pop\"\n        }, {\n          include: \"string\"\n        }]\n      }],\n      cdata: [{\n        token: \"string.cdata.xml\",\n        regex: \"\\\\]\\\\]>\",\n        next: \"start\"\n      }, {\n        token: \"text.xml\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"text.xml\",\n        regex: \"(?:[^\\\\]]|\\\\](?!\\\\]>))+\"\n      }],\n      comment: [{\n        token: \"comment.end.xml\",\n        regex: \"-->\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment.xml\"\n      }],\n      reference: [{\n        token: \"constant.language.escape.reference.xml\",\n        regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n      }],\n      attr_reference: [{\n        token: \"constant.language.escape.reference.attribute-value.xml\",\n        regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n      }],\n      tag: [{\n        token: [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.tag-name.xml\"],\n        regex: \"(?:(<)|(</))((?:\" + tagRegex + \":)?\" + tagRegex + \")\",\n        next: [{\n          include: \"attributes\"\n        }, {\n          token: \"meta.tag.punctuation.tag-close.xml\",\n          regex: \"/?>\",\n          next: \"start\"\n        }]\n      }],\n      tag_whitespace: [{\n        token: \"text.tag-whitespace.xml\",\n        regex: \"\\\\s+\"\n      }],\n      whitespace: [{\n        token: \"text.whitespace.xml\",\n        regex: \"\\\\s+\"\n      }],\n      string: [{\n        token: \"string.xml\",\n        regex: \"'\",\n        push: [{\n          token: \"string.xml\",\n          regex: \"'\",\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.xml\"\n        }]\n      }, {\n        token: \"string.xml\",\n        regex: '\"',\n        push: [{\n          token: \"string.xml\",\n          regex: '\"',\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.xml\"\n        }]\n      }],\n      attributes: [{\n        token: \"entity.other.attribute-name.xml\",\n        regex: tagRegex\n      }, {\n        token: \"keyword.operator.attribute-equals.xml\",\n        regex: \"=\"\n      }, {\n        include: \"tag_whitespace\"\n      }, {\n        include: \"attribute_value\"\n      }],\n      attribute_value: [{\n        token: \"string.attribute-value.xml\",\n        regex: \"'\",\n        push: [{\n          token: \"string.attribute-value.xml\",\n          regex: \"'\",\n          next: \"pop\"\n        }, {\n          include: \"attr_reference\"\n        }, {\n          defaultToken: \"string.attribute-value.xml\"\n        }]\n      }, {\n        token: \"string.attribute-value.xml\",\n        regex: '\"',\n        push: [{\n          token: \"string.attribute-value.xml\",\n          regex: '\"',\n          next: \"pop\"\n        }, {\n          include: \"attr_reference\"\n        }, {\n          defaultToken: \"string.attribute-value.xml\"\n        }]\n      }]\n    };\n    if (this.constructor === XmlHighlightRules) this.normalizeRules();\n  };\n\n  (function () {\n    this.embedTagRules = function (HighlightRules, prefix, tag) {\n      this.$rules.tag.unshift({\n        token: [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n        regex: \"(<)(\" + tag + \"(?=\\\\s|>|$))\",\n        next: [{\n          include: \"attributes\"\n        }, {\n          token: \"meta.tag.punctuation.tag-close.xml\",\n          regex: \"/?>\",\n          next: prefix + \"start\"\n        }]\n      });\n      this.$rules[tag + \"-end\"] = [{\n        include: \"attributes\"\n      }, {\n        token: \"meta.tag.punctuation.tag-close.xml\",\n        regex: \"/?>\",\n        next: \"start\",\n        onMatch: function (value, currentState, stack) {\n          stack.splice(0);\n          return this.token;\n        }\n      }];\n      this.embedRules(HighlightRules, prefix, [{\n        token: [\"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n        regex: \"(</)(\" + tag + \"(?=\\\\s|>|$))\",\n        next: tag + \"-end\"\n      }, {\n        token: \"string.cdata.xml\",\n        regex: \"<\\\\!\\\\[CDATA\\\\[\"\n      }, {\n        token: \"string.cdata.xml\",\n        regex: \"\\\\]\\\\]>\"\n      }]);\n    };\n  }).call(TextHighlightRules.prototype);\n  oop.inherits(XmlHighlightRules, TextHighlightRules);\n  exports.XmlHighlightRules = XmlHighlightRules;\n});\nace.define(\"ace/mode/behaviour/xml\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/behaviour\", \"ace/token_iterator\", \"ace/lib/lang\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var Behaviour = acequire(\"../behaviour\").Behaviour;\n  var TokenIterator = acequire(\"../../token_iterator\").TokenIterator;\n  var lang = acequire(\"../../lib/lang\");\n\n  function is(token, type) {\n    return token.type.lastIndexOf(type + \".xml\") > -1;\n  }\n\n  var XmlBehaviour = function () {\n    this.add(\"string_dquotes\", \"insertion\", function (state, action, editor, session, text) {\n      if (text == '\"' || text == \"'\") {\n        var quote = text;\n        var selected = session.doc.getTextRange(editor.getSelectionRange());\n\n        if (selected !== \"\" && selected !== \"'\" && selected != '\"' && editor.getWrapBehavioursEnabled()) {\n          return {\n            text: quote + selected + quote,\n            selection: false\n          };\n        }\n\n        var cursor = editor.getCursorPosition();\n        var line = session.doc.getLine(cursor.row);\n        var rightChar = line.substring(cursor.column, cursor.column + 1);\n        var iterator = new TokenIterator(session, cursor.row, cursor.column);\n        var token = iterator.getCurrentToken();\n\n        if (rightChar == quote && (is(token, \"attribute-value\") || is(token, \"string\"))) {\n          return {\n            text: \"\",\n            selection: [1, 1]\n          };\n        }\n\n        if (!token) token = iterator.stepBackward();\n        if (!token) return;\n\n        while (is(token, \"tag-whitespace\") || is(token, \"whitespace\")) {\n          token = iterator.stepBackward();\n        }\n\n        var rightSpace = !rightChar || rightChar.match(/\\s/);\n\n        if (is(token, \"attribute-equals\") && (rightSpace || rightChar == '>') || is(token, \"decl-attribute-equals\") && (rightSpace || rightChar == '?')) {\n          return {\n            text: quote + quote,\n            selection: [1, 1]\n          };\n        }\n      }\n    });\n    this.add(\"string_dquotes\", \"deletion\", function (state, action, editor, session, range) {\n      var selected = session.doc.getTextRange(range);\n\n      if (!range.isMultiLine() && (selected == '\"' || selected == \"'\")) {\n        var line = session.doc.getLine(range.start.row);\n        var rightChar = line.substring(range.start.column + 1, range.start.column + 2);\n\n        if (rightChar == selected) {\n          range.end.column++;\n          return range;\n        }\n      }\n    });\n    this.add(\"autoclosing\", \"insertion\", function (state, action, editor, session, text) {\n      if (text == '>') {\n        var position = editor.getSelectionRange().start;\n        var iterator = new TokenIterator(session, position.row, position.column);\n        var token = iterator.getCurrentToken() || iterator.stepBackward();\n        if (!token || !(is(token, \"tag-name\") || is(token, \"tag-whitespace\") || is(token, \"attribute-name\") || is(token, \"attribute-equals\") || is(token, \"attribute-value\"))) return;\n        if (is(token, \"reference.attribute-value\")) return;\n\n        if (is(token, \"attribute-value\")) {\n          var firstChar = token.value.charAt(0);\n\n          if (firstChar == '\"' || firstChar == \"'\") {\n            var lastChar = token.value.charAt(token.value.length - 1);\n            var tokenEnd = iterator.getCurrentTokenColumn() + token.value.length;\n            if (tokenEnd > position.column || tokenEnd == position.column && firstChar != lastChar) return;\n          }\n        }\n\n        while (!is(token, \"tag-name\")) {\n          token = iterator.stepBackward();\n\n          if (token.value == \"<\") {\n            token = iterator.stepForward();\n            break;\n          }\n        }\n\n        var tokenRow = iterator.getCurrentTokenRow();\n        var tokenColumn = iterator.getCurrentTokenColumn();\n        if (is(iterator.stepBackward(), \"end-tag-open\")) return;\n        var element = token.value;\n        if (tokenRow == position.row) element = element.substring(0, position.column - tokenColumn);\n        if (this.voidElements.hasOwnProperty(element.toLowerCase())) return;\n        return {\n          text: \">\" + \"</\" + element + \">\",\n          selection: [1, 1]\n        };\n      }\n    });\n    this.add(\"autoindent\", \"insertion\", function (state, action, editor, session, text) {\n      if (text == \"\\n\") {\n        var cursor = editor.getCursorPosition();\n        var line = session.getLine(cursor.row);\n        var iterator = new TokenIterator(session, cursor.row, cursor.column);\n        var token = iterator.getCurrentToken();\n\n        if (token && token.type.indexOf(\"tag-close\") !== -1) {\n          if (token.value == \"/>\") return;\n\n          while (token && token.type.indexOf(\"tag-name\") === -1) {\n            token = iterator.stepBackward();\n          }\n\n          if (!token) {\n            return;\n          }\n\n          var tag = token.value;\n          var row = iterator.getCurrentTokenRow();\n          token = iterator.stepBackward();\n\n          if (!token || token.type.indexOf(\"end-tag\") !== -1) {\n            return;\n          }\n\n          if (this.voidElements && !this.voidElements[tag]) {\n            var nextToken = session.getTokenAt(cursor.row, cursor.column + 1);\n            var line = session.getLine(row);\n            var nextIndent = this.$getIndent(line);\n            var indent = nextIndent + session.getTabString();\n\n            if (nextToken && nextToken.value === \"</\") {\n              return {\n                text: \"\\n\" + indent + \"\\n\" + nextIndent,\n                selection: [1, indent.length, 1, indent.length]\n              };\n            } else {\n              return {\n                text: \"\\n\" + indent\n              };\n            }\n          }\n        }\n      }\n    });\n  };\n\n  oop.inherits(XmlBehaviour, Behaviour);\n  exports.XmlBehaviour = XmlBehaviour;\n});\nace.define(\"ace/mode/folding/xml\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/range\", \"ace/mode/folding/fold_mode\", \"ace/token_iterator\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var lang = acequire(\"../../lib/lang\");\n  var Range = acequire(\"../../range\").Range;\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n  var TokenIterator = acequire(\"../../token_iterator\").TokenIterator;\n\n  var FoldMode = exports.FoldMode = function (voidElements, optionalEndTags) {\n    BaseFoldMode.call(this);\n    this.voidElements = voidElements || {};\n    this.optionalEndTags = oop.mixin({}, this.voidElements);\n    if (optionalEndTags) oop.mixin(this.optionalEndTags, optionalEndTags);\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n\n  var Tag = function () {\n    this.tagName = \"\";\n    this.closing = false;\n    this.selfClosing = false;\n    this.start = {\n      row: 0,\n      column: 0\n    };\n    this.end = {\n      row: 0,\n      column: 0\n    };\n  };\n\n  function is(token, type) {\n    return token.type.lastIndexOf(type + \".xml\") > -1;\n  }\n\n  (function () {\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var tag = this._getFirstTagInLine(session, row);\n\n      if (!tag) return this.getCommentFoldWidget(session, row);\n      if (tag.closing || !tag.tagName && tag.selfClosing) return foldStyle == \"markbeginend\" ? \"end\" : \"\";\n      if (!tag.tagName || tag.selfClosing || this.voidElements.hasOwnProperty(tag.tagName.toLowerCase())) return \"\";\n      if (this._findEndTagInLine(session, row, tag.tagName, tag.end.column)) return \"\";\n      return \"start\";\n    };\n\n    this.getCommentFoldWidget = function (session, row) {\n      if (/comment/.test(session.getState(row)) && /<!-/.test(session.getLine(row))) return \"start\";\n      return \"\";\n    };\n\n    this._getFirstTagInLine = function (session, row) {\n      var tokens = session.getTokens(row);\n      var tag = new Tag();\n\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n\n        if (is(token, \"tag-open\")) {\n          tag.end.column = tag.start.column + token.value.length;\n          tag.closing = is(token, \"end-tag-open\");\n          token = tokens[++i];\n          if (!token) return null;\n          tag.tagName = token.value;\n          tag.end.column += token.value.length;\n\n          for (i++; i < tokens.length; i++) {\n            token = tokens[i];\n            tag.end.column += token.value.length;\n\n            if (is(token, \"tag-close\")) {\n              tag.selfClosing = token.value == '/>';\n              break;\n            }\n          }\n\n          return tag;\n        } else if (is(token, \"tag-close\")) {\n          tag.selfClosing = token.value == '/>';\n          return tag;\n        }\n\n        tag.start.column += token.value.length;\n      }\n\n      return null;\n    };\n\n    this._findEndTagInLine = function (session, row, tagName, startColumn) {\n      var tokens = session.getTokens(row);\n      var column = 0;\n\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n        column += token.value.length;\n        if (column < startColumn) continue;\n\n        if (is(token, \"end-tag-open\")) {\n          token = tokens[i + 1];\n          if (token && token.value == tagName) return true;\n        }\n      }\n\n      return false;\n    };\n\n    this._readTagForward = function (iterator) {\n      var token = iterator.getCurrentToken();\n      if (!token) return null;\n      var tag = new Tag();\n\n      do {\n        if (is(token, \"tag-open\")) {\n          tag.closing = is(token, \"end-tag-open\");\n          tag.start.row = iterator.getCurrentTokenRow();\n          tag.start.column = iterator.getCurrentTokenColumn();\n        } else if (is(token, \"tag-name\")) {\n          tag.tagName = token.value;\n        } else if (is(token, \"tag-close\")) {\n          tag.selfClosing = token.value == \"/>\";\n          tag.end.row = iterator.getCurrentTokenRow();\n          tag.end.column = iterator.getCurrentTokenColumn() + token.value.length;\n          iterator.stepForward();\n          return tag;\n        }\n      } while (token = iterator.stepForward());\n\n      return null;\n    };\n\n    this._readTagBackward = function (iterator) {\n      var token = iterator.getCurrentToken();\n      if (!token) return null;\n      var tag = new Tag();\n\n      do {\n        if (is(token, \"tag-open\")) {\n          tag.closing = is(token, \"end-tag-open\");\n          tag.start.row = iterator.getCurrentTokenRow();\n          tag.start.column = iterator.getCurrentTokenColumn();\n          iterator.stepBackward();\n          return tag;\n        } else if (is(token, \"tag-name\")) {\n          tag.tagName = token.value;\n        } else if (is(token, \"tag-close\")) {\n          tag.selfClosing = token.value == \"/>\";\n          tag.end.row = iterator.getCurrentTokenRow();\n          tag.end.column = iterator.getCurrentTokenColumn() + token.value.length;\n        }\n      } while (token = iterator.stepBackward());\n\n      return null;\n    };\n\n    this._pop = function (stack, tag) {\n      while (stack.length) {\n        var top = stack[stack.length - 1];\n\n        if (!tag || top.tagName == tag.tagName) {\n          return stack.pop();\n        } else if (this.optionalEndTags.hasOwnProperty(top.tagName)) {\n          stack.pop();\n          continue;\n        } else {\n          return null;\n        }\n      }\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var firstTag = this._getFirstTagInLine(session, row);\n\n      if (!firstTag) {\n        return this.getCommentFoldWidget(session, row) && session.getCommentFoldRange(row, session.getLine(row).length);\n      }\n\n      var isBackward = firstTag.closing || firstTag.selfClosing;\n      var stack = [];\n      var tag;\n\n      if (!isBackward) {\n        var iterator = new TokenIterator(session, row, firstTag.start.column);\n        var start = {\n          row: row,\n          column: firstTag.start.column + firstTag.tagName.length + 2\n        };\n        if (firstTag.start.row == firstTag.end.row) start.column = firstTag.end.column;\n\n        while (tag = this._readTagForward(iterator)) {\n          if (tag.selfClosing) {\n            if (!stack.length) {\n              tag.start.column += tag.tagName.length + 2;\n              tag.end.column -= 2;\n              return Range.fromPoints(tag.start, tag.end);\n            } else continue;\n          }\n\n          if (tag.closing) {\n            this._pop(stack, tag);\n\n            if (stack.length == 0) return Range.fromPoints(start, tag.start);\n          } else {\n            stack.push(tag);\n          }\n        }\n      } else {\n        var iterator = new TokenIterator(session, row, firstTag.end.column);\n        var end = {\n          row: row,\n          column: firstTag.start.column\n        };\n\n        while (tag = this._readTagBackward(iterator)) {\n          if (tag.selfClosing) {\n            if (!stack.length) {\n              tag.start.column += tag.tagName.length + 2;\n              tag.end.column -= 2;\n              return Range.fromPoints(tag.start, tag.end);\n            } else continue;\n          }\n\n          if (!tag.closing) {\n            this._pop(stack, tag);\n\n            if (stack.length == 0) {\n              tag.start.column += tag.tagName.length + 2;\n              if (tag.start.row == tag.end.row && tag.start.column < tag.end.column) tag.start.column = tag.end.column;\n              return Range.fromPoints(tag.start, end);\n            }\n          } else {\n            stack.push(tag);\n          }\n        }\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/xml\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/text\", \"ace/mode/xml_highlight_rules\", \"ace/mode/behaviour/xml\", \"ace/mode/folding/xml\", \"ace/worker/worker_client\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var lang = acequire(\"../lib/lang\");\n  var TextMode = acequire(\"./text\").Mode;\n  var XmlHighlightRules = acequire(\"./xml_highlight_rules\").XmlHighlightRules;\n  var XmlBehaviour = acequire(\"./behaviour/xml\").XmlBehaviour;\n  var XmlFoldMode = acequire(\"./folding/xml\").FoldMode;\n  var WorkerClient = acequire(\"../worker/worker_client\").WorkerClient;\n\n  var Mode = function () {\n    this.HighlightRules = XmlHighlightRules;\n    this.$behaviour = new XmlBehaviour();\n    this.foldingRules = new XmlFoldMode();\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.voidElements = lang.arrayToMap([]);\n    this.blockComment = {\n      start: \"<!--\",\n      end: \"-->\"\n    };\n\n    this.createWorker = function (session) {\n      var worker = new WorkerClient([\"ace\"], require(\"../worker/xml\"), \"Worker\");\n      worker.attachToDocument(session.getDocument());\n      worker.on(\"error\", function (e) {\n        session.setAnnotations(e.data);\n      });\n      worker.on(\"terminate\", function () {\n        session.clearAnnotations();\n      });\n      return worker;\n    };\n\n    this.$id = \"ace/mode/xml\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});","map":{"version":3,"sources":["/Users/ishwarbaisla/Documents/GitHub/admin/node_modules/brace/mode/xml.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","XmlHighlightRules","normalize","tagRegex","$rules","start","token","regex","next","caseInsensitive","include","defaultToken","processing_instruction","doctype","push","int_subset","cdata","comment","reference","attr_reference","tag","tag_whitespace","whitespace","string","attributes","attribute_value","constructor","normalizeRules","embedTagRules","HighlightRules","prefix","unshift","onMatch","value","currentState","stack","splice","embedRules","call","prototype","inherits","Behaviour","TokenIterator","lang","is","type","lastIndexOf","XmlBehaviour","add","state","action","editor","session","text","quote","selected","doc","getTextRange","getSelectionRange","getWrapBehavioursEnabled","selection","cursor","getCursorPosition","line","getLine","row","rightChar","substring","column","iterator","getCurrentToken","stepBackward","rightSpace","match","range","isMultiLine","end","position","firstChar","charAt","lastChar","length","tokenEnd","getCurrentTokenColumn","stepForward","tokenRow","getCurrentTokenRow","tokenColumn","element","voidElements","hasOwnProperty","toLowerCase","indexOf","nextToken","getTokenAt","nextIndent","$getIndent","indent","getTabString","Range","BaseFoldMode","FoldMode","optionalEndTags","mixin","Tag","tagName","closing","selfClosing","getFoldWidget","foldStyle","_getFirstTagInLine","getCommentFoldWidget","_findEndTagInLine","test","getState","tokens","getTokens","i","startColumn","_readTagForward","_readTagBackward","_pop","top","pop","getFoldWidgetRange","firstTag","getCommentFoldRange","isBackward","fromPoints","TextMode","Mode","XmlFoldMode","WorkerClient","$behaviour","foldingRules","arrayToMap","blockComment","createWorker","worker","require","attachToDocument","getDocument","on","e","setAnnotations","data","clearAnnotations","$id"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/xml_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar XmlHighlightRules = function(normalize) {\n    var tagRegex = \"[_:a-zA-Z\\xc0-\\uffff][-_:.a-zA-Z0-9\\xc0-\\uffff]*\";\n\n    this.$rules = {\n        start : [\n            {token : \"string.cdata.xml\", regex : \"<\\\\!\\\\[CDATA\\\\[\", next : \"cdata\"},\n            {\n                token : [\"punctuation.instruction.xml\", \"keyword.instruction.xml\"],\n                regex : \"(<\\\\?)(\" + tagRegex + \")\", next : \"processing_instruction\"\n            },\n            {token : \"comment.start.xml\", regex : \"<\\\\!--\", next : \"comment\"},\n            {\n                token : [\"xml-pe.doctype.xml\", \"xml-pe.doctype.xml\"],\n                regex : \"(<\\\\!)(DOCTYPE)(?=[\\\\s])\", next : \"doctype\", caseInsensitive: true\n            },\n            {include : \"tag\"},\n            {token : \"text.end-tag-open.xml\", regex: \"</\"},\n            {token : \"text.tag-open.xml\", regex: \"<\"},\n            {include : \"reference\"},\n            {defaultToken : \"text.xml\"}\n        ],\n\n        processing_instruction : [{\n            token : \"entity.other.attribute-name.decl-attribute-name.xml\",\n            regex : tagRegex\n        }, {\n            token : \"keyword.operator.decl-attribute-equals.xml\",\n            regex : \"=\"\n        }, {\n            include: \"whitespace\"\n        }, {\n            include: \"string\"\n        }, {\n            token : \"punctuation.xml-decl.xml\",\n            regex : \"\\\\?>\",\n            next : \"start\"\n        }],\n\n        doctype : [\n            {include : \"whitespace\"},\n            {include : \"string\"},\n            {token : \"xml-pe.doctype.xml\", regex : \">\", next : \"start\"},\n            {token : \"xml-pe.xml\", regex : \"[-_a-zA-Z0-9:]+\"},\n            {token : \"punctuation.int-subset\", regex : \"\\\\[\", push : \"int_subset\"}\n        ],\n\n        int_subset : [{\n            token : \"text.xml\",\n            regex : \"\\\\s+\"\n        }, {\n            token: \"punctuation.int-subset.xml\",\n            regex: \"]\",\n            next: \"pop\"\n        }, {\n            token : [\"punctuation.markup-decl.xml\", \"keyword.markup-decl.xml\"],\n            regex : \"(<\\\\!)(\" + tagRegex + \")\",\n            push : [{\n                token : \"text\",\n                regex : \"\\\\s+\"\n            },\n            {\n                token : \"punctuation.markup-decl.xml\",\n                regex : \">\",\n                next : \"pop\"\n            },\n            {include : \"string\"}]\n        }],\n\n        cdata : [\n            {token : \"string.cdata.xml\", regex : \"\\\\]\\\\]>\", next : \"start\"},\n            {token : \"text.xml\", regex : \"\\\\s+\"},\n            {token : \"text.xml\", regex : \"(?:[^\\\\]]|\\\\](?!\\\\]>))+\"}\n        ],\n\n        comment : [\n            {token : \"comment.end.xml\", regex : \"-->\", next : \"start\"},\n            {defaultToken : \"comment.xml\"}\n        ],\n\n        reference : [{\n            token : \"constant.language.escape.reference.xml\",\n            regex : \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n        }],\n\n        attr_reference : [{\n            token : \"constant.language.escape.reference.attribute-value.xml\",\n            regex : \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n        }],\n\n        tag : [{\n            token : [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.tag-name.xml\"],\n            regex : \"(?:(<)|(</))((?:\" + tagRegex + \":)?\" + tagRegex + \")\",\n            next: [\n                {include : \"attributes\"},\n                {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\", next : \"start\"}\n            ]\n        }],\n\n        tag_whitespace : [\n            {token : \"text.tag-whitespace.xml\", regex : \"\\\\s+\"}\n        ],\n        whitespace : [\n            {token : \"text.whitespace.xml\", regex : \"\\\\s+\"}\n        ],\n        string: [{\n            token : \"string.xml\",\n            regex : \"'\",\n            push : [\n                {token : \"string.xml\", regex: \"'\", next: \"pop\"},\n                {defaultToken : \"string.xml\"}\n            ]\n        }, {\n            token : \"string.xml\",\n            regex : '\"',\n            push : [\n                {token : \"string.xml\", regex: '\"', next: \"pop\"},\n                {defaultToken : \"string.xml\"}\n            ]\n        }],\n\n        attributes: [{\n            token : \"entity.other.attribute-name.xml\",\n            regex : tagRegex\n        }, {\n            token : \"keyword.operator.attribute-equals.xml\",\n            regex : \"=\"\n        }, {\n            include: \"tag_whitespace\"\n        }, {\n            include: \"attribute_value\"\n        }],\n\n        attribute_value: [{\n            token : \"string.attribute-value.xml\",\n            regex : \"'\",\n            push : [\n                {token : \"string.attribute-value.xml\", regex: \"'\", next: \"pop\"},\n                {include : \"attr_reference\"},\n                {defaultToken : \"string.attribute-value.xml\"}\n            ]\n        }, {\n            token : \"string.attribute-value.xml\",\n            regex : '\"',\n            push : [\n                {token : \"string.attribute-value.xml\", regex: '\"', next: \"pop\"},\n                {include : \"attr_reference\"},\n                {defaultToken : \"string.attribute-value.xml\"}\n            ]\n        }]\n    };\n\n    if (this.constructor === XmlHighlightRules)\n        this.normalizeRules();\n};\n\n\n(function() {\n\n    this.embedTagRules = function(HighlightRules, prefix, tag){\n        this.$rules.tag.unshift({\n            token : [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n            regex : \"(<)(\" + tag + \"(?=\\\\s|>|$))\",\n            next: [\n                {include : \"attributes\"},\n                {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\", next : prefix + \"start\"}\n            ]\n        });\n\n        this.$rules[tag + \"-end\"] = [\n            {include : \"attributes\"},\n            {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\",  next: \"start\",\n                onMatch : function(value, currentState, stack) {\n                    stack.splice(0);\n                    return this.token;\n            }}\n        ];\n\n        this.embedRules(HighlightRules, prefix, [{\n            token: [\"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n            regex : \"(</)(\" + tag + \"(?=\\\\s|>|$))\",\n            next: tag + \"-end\"\n        }, {\n            token: \"string.cdata.xml\",\n            regex : \"<\\\\!\\\\[CDATA\\\\[\"\n        }, {\n            token: \"string.cdata.xml\",\n            regex : \"\\\\]\\\\]>\"\n        }]);\n    };\n\n}).call(TextHighlightRules.prototype);\n\noop.inherits(XmlHighlightRules, TextHighlightRules);\n\nexports.XmlHighlightRules = XmlHighlightRules;\n});\n\nace.define(\"ace/mode/behaviour/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/behaviour\",\"ace/token_iterator\",\"ace/lib/lang\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Behaviour = acequire(\"../behaviour\").Behaviour;\nvar TokenIterator = acequire(\"../../token_iterator\").TokenIterator;\nvar lang = acequire(\"../../lib/lang\");\n\nfunction is(token, type) {\n    return token.type.lastIndexOf(type + \".xml\") > -1;\n}\n\nvar XmlBehaviour = function () {\n\n    this.add(\"string_dquotes\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == '\"' || text == \"'\") {\n            var quote = text;\n            var selected = session.doc.getTextRange(editor.getSelectionRange());\n            if (selected !== \"\" && selected !== \"'\" && selected != '\"' && editor.getWrapBehavioursEnabled()) {\n                return {\n                    text: quote + selected + quote,\n                    selection: false\n                };\n            }\n\n            var cursor = editor.getCursorPosition();\n            var line = session.doc.getLine(cursor.row);\n            var rightChar = line.substring(cursor.column, cursor.column + 1);\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\n            var token = iterator.getCurrentToken();\n\n            if (rightChar == quote && (is(token, \"attribute-value\") || is(token, \"string\"))) {\n                return {\n                    text: \"\",\n                    selection: [1, 1]\n                };\n            }\n\n            if (!token)\n                token = iterator.stepBackward();\n\n            if (!token)\n                return;\n\n            while (is(token, \"tag-whitespace\") || is(token, \"whitespace\")) {\n                token = iterator.stepBackward();\n            }\n            var rightSpace = !rightChar || rightChar.match(/\\s/);\n            if (is(token, \"attribute-equals\") && (rightSpace || rightChar == '>') || (is(token, \"decl-attribute-equals\") && (rightSpace || rightChar == '?'))) {\n                return {\n                    text: quote + quote,\n                    selection: [1, 1]\n                };\n            }\n        }\n    });\n\n    this.add(\"string_dquotes\", \"deletion\", function(state, action, editor, session, range) {\n        var selected = session.doc.getTextRange(range);\n        if (!range.isMultiLine() && (selected == '\"' || selected == \"'\")) {\n            var line = session.doc.getLine(range.start.row);\n            var rightChar = line.substring(range.start.column + 1, range.start.column + 2);\n            if (rightChar == selected) {\n                range.end.column++;\n                return range;\n            }\n        }\n    });\n\n    this.add(\"autoclosing\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == '>') {\n            var position = editor.getSelectionRange().start;\n            var iterator = new TokenIterator(session, position.row, position.column);\n            var token = iterator.getCurrentToken() || iterator.stepBackward();\n            if (!token || !(is(token, \"tag-name\") || is(token, \"tag-whitespace\") || is(token, \"attribute-name\") || is(token, \"attribute-equals\") || is(token, \"attribute-value\")))\n                return;\n            if (is(token, \"reference.attribute-value\"))\n                return;\n            if (is(token, \"attribute-value\")) {\n                var firstChar = token.value.charAt(0);\n                if (firstChar == '\"' || firstChar == \"'\") {\n                    var lastChar = token.value.charAt(token.value.length - 1);\n                    var tokenEnd = iterator.getCurrentTokenColumn() + token.value.length;\n                    if (tokenEnd > position.column || tokenEnd == position.column && firstChar != lastChar)\n                        return;\n                }\n            }\n            while (!is(token, \"tag-name\")) {\n                token = iterator.stepBackward();\n                if (token.value == \"<\") {\n                    token = iterator.stepForward();\n                    break;\n                }\n            }\n\n            var tokenRow = iterator.getCurrentTokenRow();\n            var tokenColumn = iterator.getCurrentTokenColumn();\n            if (is(iterator.stepBackward(), \"end-tag-open\"))\n                return;\n\n            var element = token.value;\n            if (tokenRow == position.row)\n                element = element.substring(0, position.column - tokenColumn);\n\n            if (this.voidElements.hasOwnProperty(element.toLowerCase()))\n                 return;\n\n            return {\n               text: \">\" + \"</\" + element + \">\",\n               selection: [1, 1]\n            };\n        }\n    });\n\n    this.add(\"autoindent\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == \"\\n\") {\n            var cursor = editor.getCursorPosition();\n            var line = session.getLine(cursor.row);\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\n            var token = iterator.getCurrentToken();\n\n            if (token && token.type.indexOf(\"tag-close\") !== -1) {\n                if (token.value == \"/>\")\n                    return;\n                while (token && token.type.indexOf(\"tag-name\") === -1) {\n                    token = iterator.stepBackward();\n                }\n\n                if (!token) {\n                    return;\n                }\n\n                var tag = token.value;\n                var row = iterator.getCurrentTokenRow();\n                token = iterator.stepBackward();\n                if (!token || token.type.indexOf(\"end-tag\") !== -1) {\n                    return;\n                }\n\n                if (this.voidElements && !this.voidElements[tag]) {\n                    var nextToken = session.getTokenAt(cursor.row, cursor.column+1);\n                    var line = session.getLine(row);\n                    var nextIndent = this.$getIndent(line);\n                    var indent = nextIndent + session.getTabString();\n\n                    if (nextToken && nextToken.value === \"</\") {\n                        return {\n                            text: \"\\n\" + indent + \"\\n\" + nextIndent,\n                            selection: [1, indent.length, 1, indent.length]\n                        };\n                    } else {\n                        return {\n                            text: \"\\n\" + indent\n                        };\n                    }\n                }\n            }\n        }\n    });\n\n};\n\noop.inherits(XmlBehaviour, Behaviour);\n\nexports.XmlBehaviour = XmlBehaviour;\n});\n\nace.define(\"ace/mode/folding/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/range\",\"ace/mode/folding/fold_mode\",\"ace/token_iterator\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar lang = acequire(\"../../lib/lang\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar TokenIterator = acequire(\"../../token_iterator\").TokenIterator;\n\nvar FoldMode = exports.FoldMode = function(voidElements, optionalEndTags) {\n    BaseFoldMode.call(this);\n    this.voidElements = voidElements || {};\n    this.optionalEndTags = oop.mixin({}, this.voidElements);\n    if (optionalEndTags)\n        oop.mixin(this.optionalEndTags, optionalEndTags);\n    \n};\noop.inherits(FoldMode, BaseFoldMode);\n\nvar Tag = function() {\n    this.tagName = \"\";\n    this.closing = false;\n    this.selfClosing = false;\n    this.start = {row: 0, column: 0};\n    this.end = {row: 0, column: 0};\n};\n\nfunction is(token, type) {\n    return token.type.lastIndexOf(type + \".xml\") > -1;\n}\n\n(function() {\n\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var tag = this._getFirstTagInLine(session, row);\n\n        if (!tag)\n            return this.getCommentFoldWidget(session, row);\n\n        if (tag.closing || (!tag.tagName && tag.selfClosing))\n            return foldStyle == \"markbeginend\" ? \"end\" : \"\";\n\n        if (!tag.tagName || tag.selfClosing || this.voidElements.hasOwnProperty(tag.tagName.toLowerCase()))\n            return \"\";\n\n        if (this._findEndTagInLine(session, row, tag.tagName, tag.end.column))\n            return \"\";\n\n        return \"start\";\n    };\n\n    this.getCommentFoldWidget = function(session, row) {\n        if (/comment/.test(session.getState(row)) && /<!-/.test(session.getLine(row)))\n            return \"start\";\n        return \"\";\n    };\n    this._getFirstTagInLine = function(session, row) {\n        var tokens = session.getTokens(row);\n        var tag = new Tag();\n\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (is(token, \"tag-open\")) {\n                tag.end.column = tag.start.column + token.value.length;\n                tag.closing = is(token, \"end-tag-open\");\n                token = tokens[++i];\n                if (!token)\n                    return null;\n                tag.tagName = token.value;\n                tag.end.column += token.value.length;\n                for (i++; i < tokens.length; i++) {\n                    token = tokens[i];\n                    tag.end.column += token.value.length;\n                    if (is(token, \"tag-close\")) {\n                        tag.selfClosing = token.value == '/>';\n                        break;\n                    }\n                }\n                return tag;\n            } else if (is(token, \"tag-close\")) {\n                tag.selfClosing = token.value == '/>';\n                return tag;\n            }\n            tag.start.column += token.value.length;\n        }\n\n        return null;\n    };\n\n    this._findEndTagInLine = function(session, row, tagName, startColumn) {\n        var tokens = session.getTokens(row);\n        var column = 0;\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            column += token.value.length;\n            if (column < startColumn)\n                continue;\n            if (is(token, \"end-tag-open\")) {\n                token = tokens[i + 1];\n                if (token && token.value == tagName)\n                    return true;\n            }\n        }\n        return false;\n    };\n    this._readTagForward = function(iterator) {\n        var token = iterator.getCurrentToken();\n        if (!token)\n            return null;\n\n        var tag = new Tag();\n        do {\n            if (is(token, \"tag-open\")) {\n                tag.closing = is(token, \"end-tag-open\");\n                tag.start.row = iterator.getCurrentTokenRow();\n                tag.start.column = iterator.getCurrentTokenColumn();\n            } else if (is(token, \"tag-name\")) {\n                tag.tagName = token.value;\n            } else if (is(token, \"tag-close\")) {\n                tag.selfClosing = token.value == \"/>\";\n                tag.end.row = iterator.getCurrentTokenRow();\n                tag.end.column = iterator.getCurrentTokenColumn() + token.value.length;\n                iterator.stepForward();\n                return tag;\n            }\n        } while(token = iterator.stepForward());\n\n        return null;\n    };\n    \n    this._readTagBackward = function(iterator) {\n        var token = iterator.getCurrentToken();\n        if (!token)\n            return null;\n\n        var tag = new Tag();\n        do {\n            if (is(token, \"tag-open\")) {\n                tag.closing = is(token, \"end-tag-open\");\n                tag.start.row = iterator.getCurrentTokenRow();\n                tag.start.column = iterator.getCurrentTokenColumn();\n                iterator.stepBackward();\n                return tag;\n            } else if (is(token, \"tag-name\")) {\n                tag.tagName = token.value;\n            } else if (is(token, \"tag-close\")) {\n                tag.selfClosing = token.value == \"/>\";\n                tag.end.row = iterator.getCurrentTokenRow();\n                tag.end.column = iterator.getCurrentTokenColumn() + token.value.length;\n            }\n        } while(token = iterator.stepBackward());\n\n        return null;\n    };\n    \n    this._pop = function(stack, tag) {\n        while (stack.length) {\n            \n            var top = stack[stack.length-1];\n            if (!tag || top.tagName == tag.tagName) {\n                return stack.pop();\n            }\n            else if (this.optionalEndTags.hasOwnProperty(top.tagName)) {\n                stack.pop();\n                continue;\n            } else {\n                return null;\n            }\n        }\n    };\n    \n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var firstTag = this._getFirstTagInLine(session, row);\n        \n        if (!firstTag) {\n            return this.getCommentFoldWidget(session, row)\n                && session.getCommentFoldRange(row, session.getLine(row).length);\n        }\n        \n        var isBackward = firstTag.closing || firstTag.selfClosing;\n        var stack = [];\n        var tag;\n        \n        if (!isBackward) {\n            var iterator = new TokenIterator(session, row, firstTag.start.column);\n            var start = {\n                row: row,\n                column: firstTag.start.column + firstTag.tagName.length + 2\n            };\n            if (firstTag.start.row == firstTag.end.row)\n                start.column = firstTag.end.column;\n            while (tag = this._readTagForward(iterator)) {\n                if (tag.selfClosing) {\n                    if (!stack.length) {\n                        tag.start.column += tag.tagName.length + 2;\n                        tag.end.column -= 2;\n                        return Range.fromPoints(tag.start, tag.end);\n                    } else\n                        continue;\n                }\n                \n                if (tag.closing) {\n                    this._pop(stack, tag);\n                    if (stack.length == 0)\n                        return Range.fromPoints(start, tag.start);\n                }\n                else {\n                    stack.push(tag);\n                }\n            }\n        }\n        else {\n            var iterator = new TokenIterator(session, row, firstTag.end.column);\n            var end = {\n                row: row,\n                column: firstTag.start.column\n            };\n            \n            while (tag = this._readTagBackward(iterator)) {\n                if (tag.selfClosing) {\n                    if (!stack.length) {\n                        tag.start.column += tag.tagName.length + 2;\n                        tag.end.column -= 2;\n                        return Range.fromPoints(tag.start, tag.end);\n                    } else\n                        continue;\n                }\n                \n                if (!tag.closing) {\n                    this._pop(stack, tag);\n                    if (stack.length == 0) {\n                        tag.start.column += tag.tagName.length + 2;\n                        if (tag.start.row == tag.end.row && tag.start.column < tag.end.column)\n                            tag.start.column = tag.end.column;\n                        return Range.fromPoints(tag.start, end);\n                    }\n                }\n                else {\n                    stack.push(tag);\n                }\n            }\n        }\n        \n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text\",\"ace/mode/xml_highlight_rules\",\"ace/mode/behaviour/xml\",\"ace/mode/folding/xml\",\"ace/worker/worker_client\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar lang = acequire(\"../lib/lang\");\nvar TextMode = acequire(\"./text\").Mode;\nvar XmlHighlightRules = acequire(\"./xml_highlight_rules\").XmlHighlightRules;\nvar XmlBehaviour = acequire(\"./behaviour/xml\").XmlBehaviour;\nvar XmlFoldMode = acequire(\"./folding/xml\").FoldMode;\nvar WorkerClient = acequire(\"../worker/worker_client\").WorkerClient;\n\nvar Mode = function() {\n   this.HighlightRules = XmlHighlightRules;\n   this.$behaviour = new XmlBehaviour();\n   this.foldingRules = new XmlFoldMode();\n};\n\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.voidElements = lang.arrayToMap([]);\n\n    this.blockComment = {start: \"<!--\", end: \"-->\"};\n\n    this.createWorker = function(session) {\n        var worker = new WorkerClient([\"ace\"], require(\"../worker/xml\"), \"Worker\");\n        worker.attachToDocument(session.getDocument());\n\n        worker.on(\"error\", function(e) {\n            session.setAnnotations(e.data);\n        });\n\n        worker.on(\"terminate\", function() {\n            session.clearAnnotations();\n        });\n\n        return worker;\n    };\n    \n    this.$id = \"ace/mode/xml\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n"]},"metadata":{},"sourceType":"script"}