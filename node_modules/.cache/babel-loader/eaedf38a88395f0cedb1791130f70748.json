{"ast":null,"code":"ace.define(\"ace/mode/lua_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var LuaHighlightRules = function () {\n    var keywords = \"break|do|else|elseif|end|for|function|if|in|local|repeat|\" + \"return|then|until|while|or|and|not\";\n    var builtinConstants = \"true|false|nil|_G|_VERSION\";\n    var functions = \"string|xpcall|package|tostring|print|os|unpack|acequire|\" + \"getfenv|setmetatable|next|assert|tonumber|io|rawequal|\" + \"collectgarbage|getmetatable|module|rawset|math|debug|\" + \"pcall|table|newproxy|type|coroutine|_G|select|gcinfo|\" + \"pairs|rawget|loadstring|ipairs|_VERSION|dofile|setfenv|\" + \"load|error|loadfile|\" + \"sub|upper|len|gfind|rep|find|match|char|dump|gmatch|\" + \"reverse|byte|format|gsub|lower|preload|loadlib|loaded|\" + \"loaders|cpath|config|path|seeall|exit|setlocale|date|\" + \"getenv|difftime|remove|time|clock|tmpname|rename|execute|\" + \"lines|write|close|flush|open|output|type|read|stderr|\" + \"stdin|input|stdout|popen|tmpfile|log|max|acos|huge|\" + \"ldexp|pi|cos|tanh|pow|deg|tan|cosh|sinh|random|randomseed|\" + \"frexp|ceil|floor|rad|abs|sqrt|modf|asin|min|mod|fmod|log10|\" + \"atan2|exp|sin|atan|getupvalue|debug|sethook|getmetatable|\" + \"gethook|setmetatable|setlocal|traceback|setfenv|getinfo|\" + \"setupvalue|getlocal|getregistry|getfenv|setn|insert|getn|\" + \"foreachi|maxn|foreach|concat|sort|remove|resume|yield|\" + \"status|wrap|create|running|\" + \"__add|__sub|__mod|__unm|__concat|__lt|__index|__call|__gc|__metatable|\" + \"__mul|__div|__pow|__len|__eq|__le|__newindex|__tostring|__mode|__tonumber\";\n    var stdLibaries = \"string|package|os|io|math|debug|table|coroutine\";\n    var deprecatedIn5152 = \"setn|foreach|foreachi|gcinfo|log10|maxn\";\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword\": keywords,\n      \"support.function\": functions,\n      \"keyword.deprecated\": deprecatedIn5152,\n      \"constant.library\": stdLibaries,\n      \"constant.language\": builtinConstants,\n      \"variable.language\": \"self\"\n    }, \"identifier\");\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\n    var integer = \"(?:\" + decimalInteger + \"|\" + hexInteger + \")\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var floatNumber = \"(?:\" + pointFloat + \")\";\n    this.$rules = {\n      \"start\": [{\n        stateName: \"bracketedComment\",\n        onMatch: function (value, currentState, stack) {\n          stack.unshift(this.next, value.length - 2, currentState);\n          return \"comment\";\n        },\n        regex: /\\-\\-\\[=*\\[/,\n        next: [{\n          onMatch: function (value, currentState, stack) {\n            if (value.length == stack[1]) {\n              stack.shift();\n              stack.shift();\n              this.next = stack.shift();\n            } else {\n              this.next = \"\";\n            }\n\n            return \"comment\";\n          },\n          regex: /\\]=*\\]/,\n          next: \"start\"\n        }, {\n          defaultToken: \"comment\"\n        }]\n      }, {\n        token: \"comment\",\n        regex: \"\\\\-\\\\-.*$\"\n      }, {\n        stateName: \"bracketedString\",\n        onMatch: function (value, currentState, stack) {\n          stack.unshift(this.next, value.length, currentState);\n          return \"string.start\";\n        },\n        regex: /\\[=*\\[/,\n        next: [{\n          onMatch: function (value, currentState, stack) {\n            if (value.length == stack[1]) {\n              stack.shift();\n              stack.shift();\n              this.next = stack.shift();\n            } else {\n              this.next = \"\";\n            }\n\n            return \"string.end\";\n          },\n          regex: /\\]=*\\]/,\n          next: \"start\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: \"string\",\n        // \" string\n        regex: '\"(?:[^\\\\\\\\]|\\\\\\\\.)*?\"'\n      }, {\n        token: \"string\",\n        // ' string\n        regex: \"'(?:[^\\\\\\\\]|\\\\\\\\.)*?'\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: floatNumber\n      }, {\n        token: \"constant.numeric\",\n        // integer\n        regex: integer + \"\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\+|\\\\-|\\\\*|\\\\/|%|\\\\#|\\\\^|~|<|>|<=|=>|==|~=|=|\\\\:|\\\\.\\\\.\\\\.|\\\\.\\\\.\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[\\\\[\\\\(\\\\{]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\]\\\\)\\\\}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+|\\\\w+\"\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  oop.inherits(LuaHighlightRules, TextHighlightRules);\n  exports.LuaHighlightRules = LuaHighlightRules;\n});\nace.define(\"ace/mode/folding/lua\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\", \"ace/token_iterator\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n  var Range = acequire(\"../../range\").Range;\n  var TokenIterator = acequire(\"../../token_iterator\").TokenIterator;\n\n  var FoldMode = exports.FoldMode = function () {};\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /\\b(function|then|do|repeat)\\b|{\\s*$|(\\[=*\\[)/;\n    this.foldingStopMarker = /\\bend\\b|^\\s*}|\\]=*\\]/;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var isStart = this.foldingStartMarker.test(line);\n      var isEnd = this.foldingStopMarker.test(line);\n\n      if (isStart && !isEnd) {\n        var match = line.match(this.foldingStartMarker);\n        if (match[1] == \"then\" && /\\belseif\\b/.test(line)) return;\n\n        if (match[1]) {\n          if (session.getTokenAt(row, match.index + 1).type === \"keyword\") return \"start\";\n        } else if (match[2]) {\n          var type = session.bgTokenizer.getState(row) || \"\";\n          if (type[0] == \"bracketedComment\" || type[0] == \"bracketedString\") return \"start\";\n        } else {\n          return \"start\";\n        }\n      }\n\n      if (foldStyle != \"markbeginend\" || !isEnd || isStart && isEnd) return \"\";\n      var match = line.match(this.foldingStopMarker);\n\n      if (match[0] === \"end\") {\n        if (session.getTokenAt(row, match.index + 1).type === \"keyword\") return \"end\";\n      } else if (match[0][0] === \"]\") {\n        var type = session.bgTokenizer.getState(row - 1) || \"\";\n        if (type[0] == \"bracketedComment\" || type[0] == \"bracketedString\") return \"end\";\n      } else return \"end\";\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.doc.getLine(row);\n      var match = this.foldingStartMarker.exec(line);\n\n      if (match) {\n        if (match[1]) return this.luaBlock(session, row, match.index + 1);\n        if (match[2]) return session.getCommentFoldRange(row, match.index + 1);\n        return this.openingBracketBlock(session, \"{\", row, match.index);\n      }\n\n      var match = this.foldingStopMarker.exec(line);\n\n      if (match) {\n        if (match[0] === \"end\") {\n          if (session.getTokenAt(row, match.index + 1).type === \"keyword\") return this.luaBlock(session, row, match.index + 1);\n        }\n\n        if (match[0][0] === \"]\") return session.getCommentFoldRange(row, match.index + 1);\n        return this.closingBracketBlock(session, \"}\", row, match.index + match[0].length);\n      }\n    };\n\n    this.luaBlock = function (session, row, column) {\n      var stream = new TokenIterator(session, row, column);\n      var indentKeywords = {\n        \"function\": 1,\n        \"do\": 1,\n        \"then\": 1,\n        \"elseif\": -1,\n        \"end\": -1,\n        \"repeat\": 1,\n        \"until\": -1\n      };\n      var token = stream.getCurrentToken();\n      if (!token || token.type != \"keyword\") return;\n      var val = token.value;\n      var stack = [val];\n      var dir = indentKeywords[val];\n      if (!dir) return;\n      var startColumn = dir === -1 ? stream.getCurrentTokenColumn() : session.getLine(row).length;\n      var startRow = row;\n      stream.step = dir === -1 ? stream.stepBackward : stream.stepForward;\n\n      while (token = stream.step()) {\n        if (token.type !== \"keyword\") continue;\n        var level = dir * indentKeywords[token.value];\n\n        if (level > 0) {\n          stack.unshift(token.value);\n        } else if (level <= 0) {\n          stack.shift();\n          if (!stack.length && token.value != \"elseif\") break;\n          if (level === 0) stack.unshift(token.value);\n        }\n      }\n\n      var row = stream.getCurrentTokenRow();\n      if (dir === -1) return new Range(row, session.getLine(row).length, startRow, startColumn);else return new Range(startRow, startColumn, row, stream.getCurrentTokenColumn());\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/lua\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/lua_highlight_rules\", \"ace/mode/folding/lua\", \"ace/range\", \"ace/worker/worker_client\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var LuaHighlightRules = acequire(\"./lua_highlight_rules\").LuaHighlightRules;\n  var LuaFoldMode = acequire(\"./folding/lua\").FoldMode;\n  var Range = acequire(\"../range\").Range;\n  var WorkerClient = acequire(\"../worker/worker_client\").WorkerClient;\n\n  var Mode = function () {\n    this.HighlightRules = LuaHighlightRules;\n    this.foldingRules = new LuaFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n    this.blockComment = {\n      start: \"--[\",\n      end: \"]--\"\n    };\n    var indentKeywords = {\n      \"function\": 1,\n      \"then\": 1,\n      \"do\": 1,\n      \"else\": 1,\n      \"elseif\": 1,\n      \"repeat\": 1,\n      \"end\": -1,\n      \"until\": -1\n    };\n    var outdentKeywords = [\"else\", \"elseif\", \"end\", \"until\"];\n\n    function getNetIndentLevel(tokens) {\n      var level = 0;\n\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n\n        if (token.type == \"keyword\") {\n          if (token.value in indentKeywords) {\n            level += indentKeywords[token.value];\n          }\n        } else if (token.type == \"paren.lparen\") {\n          level += token.value.length;\n        } else if (token.type == \"paren.rparen\") {\n          level -= token.value.length;\n        }\n      }\n\n      if (level < 0) {\n        return -1;\n      } else if (level > 0) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var level = 0;\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n\n      if (state == \"start\") {\n        level = getNetIndentLevel(tokens);\n      }\n\n      if (level > 0) {\n        return indent + tab;\n      } else if (level < 0 && indent.substr(indent.length - tab.length) == tab) {\n        if (!this.checkOutdent(state, line, \"\\n\")) {\n          return indent.substr(0, indent.length - tab.length);\n        }\n      }\n\n      return indent;\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      if (input != \"\\n\" && input != \"\\r\" && input != \"\\r\\n\") return false;\n      if (line.match(/^\\s*[\\)\\}\\]]$/)) return true;\n      var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n      if (!tokens || !tokens.length) return false;\n      return tokens[0].type == \"keyword\" && outdentKeywords.indexOf(tokens[0].value) != -1;\n    };\n\n    this.autoOutdent = function (state, session, row) {\n      var prevLine = session.getLine(row - 1);\n      var prevIndent = this.$getIndent(prevLine).length;\n      var prevTokens = this.getTokenizer().getLineTokens(prevLine, \"start\").tokens;\n      var tabLength = session.getTabString().length;\n      var expectedIndent = prevIndent + tabLength * getNetIndentLevel(prevTokens);\n      var curIndent = this.$getIndent(session.getLine(row)).length;\n\n      if (curIndent <= expectedIndent) {\n        return;\n      }\n\n      session.outdentRows(new Range(row, 0, row + 2, 0));\n    };\n\n    this.createWorker = function (session) {\n      var worker = new WorkerClient([\"ace\"], require(\"../worker/lua\"), \"Worker\");\n      worker.attachToDocument(session.getDocument());\n      worker.on(\"annotate\", function (e) {\n        session.setAnnotations(e.data);\n      });\n      worker.on(\"terminate\", function () {\n        session.clearAnnotations();\n      });\n      return worker;\n    };\n\n    this.$id = \"ace/mode/lua\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});","map":{"version":3,"sources":["/Users/ishwarbaisla/Documents/GitHub/admin/node_modules/brace/mode/lua.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","LuaHighlightRules","keywords","builtinConstants","functions","stdLibaries","deprecatedIn5152","keywordMapper","createKeywordMapper","decimalInteger","hexInteger","integer","fraction","intPart","pointFloat","floatNumber","$rules","stateName","onMatch","value","currentState","stack","unshift","next","length","regex","shift","defaultToken","token","normalizeRules","inherits","BaseFoldMode","FoldMode","Range","TokenIterator","foldingStartMarker","foldingStopMarker","getFoldWidget","session","foldStyle","row","line","getLine","isStart","test","isEnd","match","getTokenAt","index","type","bgTokenizer","getState","getFoldWidgetRange","doc","exec","luaBlock","getCommentFoldRange","openingBracketBlock","closingBracketBlock","column","stream","indentKeywords","getCurrentToken","val","dir","startColumn","getCurrentTokenColumn","startRow","step","stepBackward","stepForward","level","getCurrentTokenRow","call","prototype","TextMode","Mode","LuaFoldMode","WorkerClient","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","start","end","outdentKeywords","getNetIndentLevel","tokens","i","getNextLineIndent","state","tab","indent","$getIndent","tokenizedLine","getTokenizer","getLineTokens","substr","checkOutdent","input","trim","indexOf","autoOutdent","prevLine","prevIndent","prevTokens","tabLength","getTabString","expectedIndent","curIndent","outdentRows","createWorker","worker","require","attachToDocument","getDocument","on","e","setAnnotations","data","clearAnnotations","$id"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/lua_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar LuaHighlightRules = function() {\n\n    var keywords = (\n        \"break|do|else|elseif|end|for|function|if|in|local|repeat|\"+\n         \"return|then|until|while|or|and|not\"\n    );\n\n    var builtinConstants = (\"true|false|nil|_G|_VERSION\");\n\n    var functions = (\n        \"string|xpcall|package|tostring|print|os|unpack|acequire|\"+\n        \"getfenv|setmetatable|next|assert|tonumber|io|rawequal|\"+\n        \"collectgarbage|getmetatable|module|rawset|math|debug|\"+\n        \"pcall|table|newproxy|type|coroutine|_G|select|gcinfo|\"+\n        \"pairs|rawget|loadstring|ipairs|_VERSION|dofile|setfenv|\"+\n        \"load|error|loadfile|\"+\n\n        \"sub|upper|len|gfind|rep|find|match|char|dump|gmatch|\"+\n        \"reverse|byte|format|gsub|lower|preload|loadlib|loaded|\"+\n        \"loaders|cpath|config|path|seeall|exit|setlocale|date|\"+\n        \"getenv|difftime|remove|time|clock|tmpname|rename|execute|\"+\n        \"lines|write|close|flush|open|output|type|read|stderr|\"+\n        \"stdin|input|stdout|popen|tmpfile|log|max|acos|huge|\"+\n        \"ldexp|pi|cos|tanh|pow|deg|tan|cosh|sinh|random|randomseed|\"+\n        \"frexp|ceil|floor|rad|abs|sqrt|modf|asin|min|mod|fmod|log10|\"+\n        \"atan2|exp|sin|atan|getupvalue|debug|sethook|getmetatable|\"+\n        \"gethook|setmetatable|setlocal|traceback|setfenv|getinfo|\"+\n        \"setupvalue|getlocal|getregistry|getfenv|setn|insert|getn|\"+\n        \"foreachi|maxn|foreach|concat|sort|remove|resume|yield|\"+\n        \"status|wrap|create|running|\"+\n        \"__add|__sub|__mod|__unm|__concat|__lt|__index|__call|__gc|__metatable|\"+\n         \"__mul|__div|__pow|__len|__eq|__le|__newindex|__tostring|__mode|__tonumber\"\n    );\n\n    var stdLibaries = (\"string|package|os|io|math|debug|table|coroutine\");\n\n    var deprecatedIn5152 = (\"setn|foreach|foreachi|gcinfo|log10|maxn\");\n\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword\": keywords,\n        \"support.function\": functions,\n        \"keyword.deprecated\": deprecatedIn5152,\n        \"constant.library\": stdLibaries,\n        \"constant.language\": builtinConstants,\n        \"variable.language\": \"self\"\n    }, \"identifier\");\n\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\n    var integer = \"(?:\" + decimalInteger + \"|\" + hexInteger + \")\";\n\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var floatNumber = \"(?:\" + pointFloat + \")\";\n\n    this.$rules = {\n        \"start\" : [{\n            stateName: \"bracketedComment\",\n            onMatch : function(value, currentState, stack){\n                stack.unshift(this.next, value.length - 2, currentState);\n                return \"comment\";\n            },\n            regex : /\\-\\-\\[=*\\[/,\n            next  : [\n                {\n                    onMatch : function(value, currentState, stack) {\n                        if (value.length == stack[1]) {\n                            stack.shift();\n                            stack.shift();\n                            this.next = stack.shift();\n                        } else {\n                            this.next = \"\";\n                        }\n                        return \"comment\";\n                    },\n                    regex : /\\]=*\\]/,\n                    next  : \"start\"\n                }, {\n                    defaultToken : \"comment\"\n                }\n            ]\n        },\n\n        {\n            token : \"comment\",\n            regex : \"\\\\-\\\\-.*$\"\n        },\n        {\n            stateName: \"bracketedString\",\n            onMatch : function(value, currentState, stack){\n                stack.unshift(this.next, value.length, currentState);\n                return \"string.start\";\n            },\n            regex : /\\[=*\\[/,\n            next  : [\n                {\n                    onMatch : function(value, currentState, stack) {\n                        if (value.length == stack[1]) {\n                            stack.shift();\n                            stack.shift();\n                            this.next = stack.shift();\n                        } else {\n                            this.next = \"\";\n                        }\n                        return \"string.end\";\n                    },\n                    \n                    regex : /\\]=*\\]/,\n                    next  : \"start\"\n                }, {\n                    defaultToken : \"string\"\n                }\n            ]\n        },\n        {\n            token : \"string\",           // \" string\n            regex : '\"(?:[^\\\\\\\\]|\\\\\\\\.)*?\"'\n        }, {\n            token : \"string\",           // ' string\n            regex : \"'(?:[^\\\\\\\\]|\\\\\\\\.)*?'\"\n        }, {\n            token : \"constant.numeric\", // float\n            regex : floatNumber\n        }, {\n            token : \"constant.numeric\", // integer\n            regex : integer + \"\\\\b\"\n        }, {\n            token : keywordMapper,\n            regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n        }, {\n            token : \"keyword.operator\",\n            regex : \"\\\\+|\\\\-|\\\\*|\\\\/|%|\\\\#|\\\\^|~|<|>|<=|=>|==|~=|=|\\\\:|\\\\.\\\\.\\\\.|\\\\.\\\\.\"\n        }, {\n            token : \"paren.lparen\",\n            regex : \"[\\\\[\\\\(\\\\{]\"\n        }, {\n            token : \"paren.rparen\",\n            regex : \"[\\\\]\\\\)\\\\}]\"\n        }, {\n            token : \"text\",\n            regex : \"\\\\s+|\\\\w+\"\n        } ]\n    };\n    \n    this.normalizeRules();\n};\n\noop.inherits(LuaHighlightRules, TextHighlightRules);\n\nexports.LuaHighlightRules = LuaHighlightRules;\n});\n\nace.define(\"ace/mode/folding/lua\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\",\"ace/token_iterator\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar Range = acequire(\"../../range\").Range;\nvar TokenIterator = acequire(\"../../token_iterator\").TokenIterator;\n\n\nvar FoldMode = exports.FoldMode = function() {};\n\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.foldingStartMarker = /\\b(function|then|do|repeat)\\b|{\\s*$|(\\[=*\\[)/;\n    this.foldingStopMarker = /\\bend\\b|^\\s*}|\\]=*\\]/;\n\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var isStart = this.foldingStartMarker.test(line);\n        var isEnd = this.foldingStopMarker.test(line);\n\n        if (isStart && !isEnd) {\n            var match = line.match(this.foldingStartMarker);\n            if (match[1] == \"then\" && /\\belseif\\b/.test(line))\n                return;\n            if (match[1]) {\n                if (session.getTokenAt(row, match.index + 1).type === \"keyword\")\n                    return \"start\";\n            } else if (match[2]) {\n                var type = session.bgTokenizer.getState(row) || \"\";\n                if (type[0] == \"bracketedComment\" || type[0] == \"bracketedString\")\n                    return \"start\";\n            } else {\n                return \"start\";\n            }\n        }\n        if (foldStyle != \"markbeginend\" || !isEnd || isStart && isEnd)\n            return \"\";\n\n        var match = line.match(this.foldingStopMarker);\n        if (match[0] === \"end\") {\n            if (session.getTokenAt(row, match.index + 1).type === \"keyword\")\n                return \"end\";\n        } else if (match[0][0] === \"]\") {\n            var type = session.bgTokenizer.getState(row - 1) || \"\";\n            if (type[0] == \"bracketedComment\" || type[0] == \"bracketedString\")\n                return \"end\";\n        } else\n            return \"end\";\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var line = session.doc.getLine(row);\n        var match = this.foldingStartMarker.exec(line);\n        if (match) {\n            if (match[1])\n                return this.luaBlock(session, row, match.index + 1);\n\n            if (match[2])\n                return session.getCommentFoldRange(row, match.index + 1);\n\n            return this.openingBracketBlock(session, \"{\", row, match.index);\n        }\n\n        var match = this.foldingStopMarker.exec(line);\n        if (match) {\n            if (match[0] === \"end\") {\n                if (session.getTokenAt(row, match.index + 1).type === \"keyword\")\n                    return this.luaBlock(session, row, match.index + 1);\n            }\n\n            if (match[0][0] === \"]\")\n                return session.getCommentFoldRange(row, match.index + 1);\n\n            return this.closingBracketBlock(session, \"}\", row, match.index + match[0].length);\n        }\n    };\n\n    this.luaBlock = function(session, row, column) {\n        var stream = new TokenIterator(session, row, column);\n        var indentKeywords = {\n            \"function\": 1,\n            \"do\": 1,\n            \"then\": 1,\n            \"elseif\": -1,\n            \"end\": -1,\n            \"repeat\": 1,\n            \"until\": -1\n        };\n\n        var token = stream.getCurrentToken();\n        if (!token || token.type != \"keyword\")\n            return;\n\n        var val = token.value;\n        var stack = [val];\n        var dir = indentKeywords[val];\n\n        if (!dir)\n            return;\n\n        var startColumn = dir === -1 ? stream.getCurrentTokenColumn() : session.getLine(row).length;\n        var startRow = row;\n\n        stream.step = dir === -1 ? stream.stepBackward : stream.stepForward;\n        while(token = stream.step()) {\n            if (token.type !== \"keyword\")\n                continue;\n            var level = dir * indentKeywords[token.value];\n\n            if (level > 0) {\n                stack.unshift(token.value);\n            } else if (level <= 0) {\n                stack.shift();\n                if (!stack.length && token.value != \"elseif\")\n                    break;\n                if (level === 0)\n                    stack.unshift(token.value);\n            }\n        }\n\n        var row = stream.getCurrentTokenRow();\n        if (dir === -1)\n            return new Range(row, session.getLine(row).length, startRow, startColumn);\n        else\n            return new Range(startRow, startColumn, row, stream.getCurrentTokenColumn());\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/lua\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/lua_highlight_rules\",\"ace/mode/folding/lua\",\"ace/range\",\"ace/worker/worker_client\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar LuaHighlightRules = acequire(\"./lua_highlight_rules\").LuaHighlightRules;\nvar LuaFoldMode = acequire(\"./folding/lua\").FoldMode;\nvar Range = acequire(\"../range\").Range;\nvar WorkerClient = acequire(\"../worker/worker_client\").WorkerClient;\n\nvar Mode = function() {\n    this.HighlightRules = LuaHighlightRules;\n    \n    this.foldingRules = new LuaFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n   \n    this.lineCommentStart = \"--\";\n    this.blockComment = {start: \"--[\", end: \"]--\"};\n    \n    var indentKeywords = {\n        \"function\": 1,\n        \"then\": 1,\n        \"do\": 1,\n        \"else\": 1,\n        \"elseif\": 1,\n        \"repeat\": 1,\n        \"end\": -1,\n        \"until\": -1\n    };\n    var outdentKeywords = [\n        \"else\",\n        \"elseif\",\n        \"end\",\n        \"until\"\n    ];\n\n    function getNetIndentLevel(tokens) {\n        var level = 0;\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (token.type == \"keyword\") {\n                if (token.value in indentKeywords) {\n                    level += indentKeywords[token.value];\n                }\n            } else if (token.type == \"paren.lparen\") {\n                level += token.value.length;\n            } else if (token.type == \"paren.rparen\") {\n                level -= token.value.length;\n            }\n        }\n        if (level < 0) {\n            return -1;\n        } else if (level > 0) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n        var level = 0;\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n\n        if (state == \"start\") {\n            level = getNetIndentLevel(tokens);\n        }\n        if (level > 0) {\n            return indent + tab;\n        } else if (level < 0 && indent.substr(indent.length - tab.length) == tab) {\n            if (!this.checkOutdent(state, line, \"\\n\")) {\n                return indent.substr(0, indent.length - tab.length);\n            }\n        }\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        if (input != \"\\n\" && input != \"\\r\" && input != \"\\r\\n\")\n            return false;\n\n        if (line.match(/^\\s*[\\)\\}\\]]$/))\n            return true;\n\n        var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n\n        if (!tokens || !tokens.length)\n            return false;\n\n        return (tokens[0].type == \"keyword\" && outdentKeywords.indexOf(tokens[0].value) != -1);\n    };\n\n    this.autoOutdent = function(state, session, row) {\n        var prevLine = session.getLine(row - 1);\n        var prevIndent = this.$getIndent(prevLine).length;\n        var prevTokens = this.getTokenizer().getLineTokens(prevLine, \"start\").tokens;\n        var tabLength = session.getTabString().length;\n        var expectedIndent = prevIndent + tabLength * getNetIndentLevel(prevTokens);\n        var curIndent = this.$getIndent(session.getLine(row)).length;\n        if (curIndent <= expectedIndent) {\n            return;\n        }\n        session.outdentRows(new Range(row, 0, row + 2, 0));\n    };\n\n    this.createWorker = function(session) {\n        var worker = new WorkerClient([\"ace\"], require(\"../worker/lua\"), \"Worker\");\n        worker.attachToDocument(session.getDocument());\n        \n        worker.on(\"annotate\", function(e) {\n            session.setAnnotations(e.data);\n        });\n        \n        worker.on(\"terminate\", function() {\n            session.clearAnnotations();\n        });\n        \n        return worker;\n    };\n\n    this.$id = \"ace/mode/lua\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n"]},"metadata":{},"sourceType":"script"}