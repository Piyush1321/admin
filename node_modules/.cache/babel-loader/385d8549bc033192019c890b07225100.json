{"ast":null,"code":"var _jsxFileName = \"/Users/ishwarbaisla/Documents/GitHub/admin/src/components/util/QuestionNavigationDialog.js\";\nimport React from 'react';\nimport Request from '../services/Request';\nimport '../css/QuestionNavigationDialog.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass QuestionNavigationDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchQuestionTitles = () => {\n      let url = \"http://localhost:8080/QuizWit/ViewQuestionForNavigation?sectionId=\";\n      url += this.state.sectionId;\n      Request.get(url).then(res => {\n        let details = res.questionTitles;\n\n        for (let i = 0; i < details.length; i++) {\n          details[i][\"serial\"] = i + 1;\n          if (details[i].question.length >= 45) details[i].question = details[i].question.substr(0, 45) + '...';\n        }\n\n        if (res.success) {\n          this.setState({\n            question: details\n          });\n        }\n      });\n    };\n\n    this.navigate = e => {\n      console.log(e);\n      console.log(e.target.id);\n      this.props.navigateToQuestion(e.target.id);\n    };\n\n    this.closeDialog = () => {\n      document.getElementById('question-navigation-dialog').style.display = 'none';\n      document.getElementById('route-overlay').style.display = 'none';\n    };\n\n    this.componentDidMount = () => {\n      this.fetchQuestionTitles();\n    };\n\n    this.state = {\n      question: [],\n      sectionId: this.props.sectionId\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"question-navigation-dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-col jc-sb flex-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mb-10 primary\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"secondary\",\n              children: this.props.sectionTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"gray\",\n              children: \" > \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"primary\",\n              children: \"Questions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-full question-titles-container\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              children: this.state.question.map((d, k) => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  id: d.serial,\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    id: d.serial,\n                    style: {\n                      width: \"40px\"\n                    },\n                    onClick: this.navigate,\n                    children: d.serial\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    id: d.serial,\n                    onClick: this.navigate,\n                    children: d.question\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 45\n                  }, this)]\n                }, k, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 48\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-row jc-e btn-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-fade btn-small\",\n              onClick: this.closeDialog,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default QuestionNavigationDialog;","map":{"version":3,"sources":["/Users/ishwarbaisla/Documents/GitHub/admin/src/components/util/QuestionNavigationDialog.js"],"names":["React","Request","QuestionNavigationDialog","Component","constructor","props","fetchQuestionTitles","url","state","sectionId","get","then","res","details","questionTitles","i","length","question","substr","success","setState","navigate","e","console","log","target","id","navigateToQuestion","closeDialog","document","getElementById","style","display","componentDidMount","render","sectionTitle","map","d","k","serial","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Request from '../services/Request';\nimport '../css/QuestionNavigationDialog.css';\nclass QuestionNavigationDialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            question: [],\n            sectionId: this.props.sectionId\n        }\n    }\n\n    fetchQuestionTitles = () => {\n        let url = \"http://localhost:8080/QuizWit/ViewQuestionForNavigation?sectionId=\";\n        url += this.state.sectionId;\n        Request.get(url)\n        .then((res) => {\n            let details = res.questionTitles;\n            for(let i=0; i<details.length; i++) {\n                details[i][\"serial\"] = i+1;\n                if(details[i].question.length >= 45)\n                    details[i].question = details[i].question.substr(0, 45) + '...'\n            }\n            if(res.success) {\n                this.setState({\n                    question: details\n                })\n            }\n        })\n    }\n\n    navigate = (e) => {\n        console.log(e);\n        console.log(e.target.id)\n        this.props.navigateToQuestion(e.target.id);\n    }\n\n    closeDialog = () => {\n        document.getElementById('question-navigation-dialog').style.display = 'none';\n        document.getElementById('route-overlay').style.display = 'none';\n    }\n\n    componentDidMount = () => {\n        this.fetchQuestionTitles();\n    }\n    render() {\n        return (\n            <>\n                <div id='question-navigation-dialog'>\n                    <div className='flex-col jc-sb flex-full'>\n                        <h3 className='mb-10 primary'>\n                            <span className='secondary'>{this.props.sectionTitle}</span>\n                            <span className='gray'> &gt; </span>\n                            <span className='primary'>Questions</span>\n                        </h3>\n                        <div className='flex-full question-titles-container'>\n                            <table>\n                                {\n                                    this.state.question.map((d, k) => {\n                                        return <tr key={k} id={d.serial} >\n                                            <td id={d.serial} style={{width: \"40px\"}} onClick={this.navigate}>{d.serial}</td>\n                                            <td id={d.serial} onClick={this.navigate}>{d.question}</td>\n                                        </tr>\n                                    })\n                                }\n                            </table>\n                        </div>\n                        <div className='flex-row jc-e btn-container'>\n                            <button className='btn btn-fade btn-small' onClick={this.closeDialog}>Close</button>\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default QuestionNavigationDialog;"]},"metadata":{},"sourceType":"module"}