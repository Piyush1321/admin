{"ast":null,"code":"var _jsxFileName = \"/Users/ishwarbaisla/Documents/GitHub/admin/src/components/util/questions/MCQSingleCorrectTemplate.js\";\nimport React from 'react';\nimport EditorJS from '@editorjs/editorjs';\nimport { EDITOR_JS_TOOLS } from '../../util/Tool';\nimport Loader from '../../util/Loader';\nimport Flash from '../../services/Flash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MCQSingleCorrectTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addQuestion = e => {\n      e.preventDefault();\n      console.log('submitted');\n      console.log(JSON.stringify(this.state.question));\n      let mcqOptionAnswer = document.getElementsByName('mcqOptionAnswer');\n      let correctAnswer = null;\n\n      for (let i = 0; i < mcqOptionAnswer.length; i++) {\n        if (mcqOptionAnswer[i].checked) {\n          correctAnswer = i + 1;\n          break;\n        }\n      }\n\n      if (!correctAnswer) {\n        Flash.message('Please select correct option', 'bg-primary');\n        return;\n      }\n\n      console.log(correctAnswer);\n    };\n\n    this.componentDidMount = () => {\n      const reactEditor = new EditorJS({\n        holder: 'react-editor-js-for-question',\n        tools: EDITOR_JS_TOOLS,\n        placeholder: 'Type your question here...',\n        onChange: () => {\n          reactEditor.save().then(d => {\n            this.setState({\n              question: d.blocks\n            });\n          });\n        },\n        onReady: () => {\n          document.getElementsByClassName('codex-editor__redactor')[0].style.paddingBottom = '0px';\n          document.getElementById('react-editor-js-for-question').style.display = 'block';\n          this.setState({\n            load: true\n          });\n\n          for (let i = 0; i < 4; i++) this.createMcqOption();\n        }\n      });\n    };\n\n    this.createMcqOption = () => {\n      let div = document.createElement('div');\n      div.className = 'mcq-option-container';\n      let div1 = document.createElement('div');\n      let input = document.createElement('input');\n      input.type = 'radio';\n      input.name = 'mcqOptionAnswer';\n      div1.appendChild(input);\n      let div2 = document.createElement('div');\n      let textarea = document.createElement('textarea');\n      textarea.name = 'mcqOption[]';\n      textarea.placeholder = 'Type your option here...';\n      div2.appendChild(textarea);\n      let div3 = document.createElement('div');\n      let i = document.createElement('i');\n      i.className = 'fas fa-trash';\n      i.addEventListener('click', () => {\n        let res = true;\n\n        if (res) {\n          div.remove();\n        }\n      });\n      div3.appendChild(i);\n      div.appendChild(div1);\n      div.appendChild(div2);\n      div.appendChild(div3);\n      let parent = document.getElementsByClassName('mcq-options-block')[0];\n      parent.appendChild(div);\n    };\n\n    this.pickTimeFromSlots = () => {\n      let slots = document.getElementsByName('timeDurationSlots');\n\n      for (let i = 0; i < slots.length; i++) {\n        slots[i].addEventListener('click', e => {\n          document.getElementsByName('timeDuration')[0].defaultValue = e.target.defaultValue;\n        });\n      }\n    };\n\n    this.resetTimeSlots = () => {\n      let slots = document.getElementsByName('timeDurationSlots');\n\n      for (let i = 0; i < slots.length; i++) {\n        slots[i].checked = false;\n      }\n    };\n\n    this.state = {\n      question: '',\n      load: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"question-form\",\n      onSubmit: this.addQuestion,\n      children: [!this.state.load && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), this.state.load && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-container\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"template-headings\",\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SimpleMDE, {\n          defaultValue: this.state.question,\n          onChange: this.onChange,\n          options: {\n            previewRender(plainText) {\n              return ReactDOMServer.renderToString( /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                children: plainText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 70\n              }, this));\n            }\n\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"hidden\",\n        type: \"number\",\n        name: \"sectionId\",\n        defaultValue: this.props.sectionId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"hidden\",\n        name: \"question\",\n        rows: \"10\",\n        id: \"question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), this.state.load && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mcq-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"template-headings\",\n            children: \"MCQ Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mcq-options-block\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-row jc-e mt-10 pb-10\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary btn-small\",\n              onClick: this.createMcqOption,\n              children: \"Add option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"hidden\",\n          type: \"submit\",\n          id: \"submit-question-form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MCQSingleCorrectTemplate;","map":{"version":3,"sources":["/Users/ishwarbaisla/Documents/GitHub/admin/src/components/util/questions/MCQSingleCorrectTemplate.js"],"names":["React","EditorJS","EDITOR_JS_TOOLS","Loader","Flash","MCQSingleCorrectTemplate","Component","constructor","props","addQuestion","e","preventDefault","console","log","JSON","stringify","state","question","mcqOptionAnswer","document","getElementsByName","correctAnswer","i","length","checked","message","componentDidMount","reactEditor","holder","tools","placeholder","onChange","save","then","d","setState","blocks","onReady","getElementsByClassName","style","paddingBottom","getElementById","display","load","createMcqOption","div","createElement","className","div1","input","type","name","appendChild","div2","textarea","div3","addEventListener","res","remove","parent","pickTimeFromSlots","slots","defaultValue","target","resetTimeSlots","render","previewRender","plainText","ReactDOMServer","renderToString","sectionId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport EditorJS from '@editorjs/editorjs';\nimport {EDITOR_JS_TOOLS} from '../../util/Tool';\nimport Loader from '../../util/Loader';\nimport Flash from '../../services/Flash';\n\nclass MCQSingleCorrectTemplate extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            question: '',\n            load: false\n        }\n    }\n    addQuestion = (e) => {\n        e.preventDefault();\n        console.log('submitted');\n        console.log(JSON.stringify(this.state.question))\n\n        let mcqOptionAnswer = document.getElementsByName('mcqOptionAnswer');\n        let correctAnswer = null;\n        for(let i=0; i<mcqOptionAnswer.length; i++) {\n            if(mcqOptionAnswer[i].checked) {\n                correctAnswer = i+1;\n                break;\n            }\n        }\n        if(!correctAnswer) {\n            Flash.message('Please select correct option', 'bg-primary');\n            return;\n        }\n        console.log(correctAnswer);\n    }\n    componentDidMount = () => {\n        const reactEditor = new EditorJS({\n            holder: 'react-editor-js-for-question',\n            tools: EDITOR_JS_TOOLS,\n            placeholder: 'Type your question here...',\n            onChange: () => {\n                reactEditor.save().then((d) => {\n                    this.setState({\n                        question: d.blocks\n                    })\n                })\n            },\n            onReady: () => {\n                document.getElementsByClassName('codex-editor__redactor')[0].style.paddingBottom = '0px';\n                document.getElementById('react-editor-js-for-question').style.display = 'block';\n                this.setState({\n                    load: true\n                })\n                for(let i=0; i<4; i++)\n                    this.createMcqOption();\n            }\n        });\n\n    }\n\n    createMcqOption = () => {\n        let div = document.createElement('div');\n        div.className = 'mcq-option-container';\n        let div1 = document.createElement('div');\n        let input = document.createElement('input');\n        input.type = 'radio';\n        input.name = 'mcqOptionAnswer';\n        div1.appendChild(input);\n        let div2 = document.createElement('div');\n        let textarea = document.createElement('textarea');\n        textarea.name = 'mcqOption[]'\n        textarea.placeholder = 'Type your option here...'\n        div2.appendChild(textarea);\n        let div3 = document.createElement('div');\n        let i = document.createElement('i');\n        i.className = 'fas fa-trash';\n        i.addEventListener('click', () => {\n            let res = true;\n            if(res) {\n                div.remove();\n            }\n        })\n        div3.appendChild(i);\n        div.appendChild(div1);\n        div.appendChild(div2);\n        div.appendChild(div3);\n        let parent = document.getElementsByClassName('mcq-options-block')[0];\n        parent.appendChild(div);\n    }\n\n    pickTimeFromSlots = () => {\n        let slots = document.getElementsByName('timeDurationSlots');\n        for(let i=0; i<slots.length; i++) {\n            slots[i].addEventListener('click', (e) => {\n                document.getElementsByName('timeDuration')[0].defaultValue = e.target.defaultValue;\n            })\n        }\n    }\n\n    resetTimeSlots = () => {\n        let slots = document.getElementsByName('timeDurationSlots');\n        for(let i=0; i<slots.length; i++) {\n            slots[i].checked = false;\n        }\n    }\n\n    render() {\n        return (\n            <form id='question-form' onSubmit={this.addQuestion}>\n                {\n                    !this.state.load &&\n                    <Loader />\n                }\n                {\n                    this.state.load &&\n                    <>\n                    <div className='question-container'>\n                        <h3 className='template-headings'>Question</h3>\n                    </div>\n                    <SimpleMDE \n                        defaultValue={this.state.question}\n                        onChange={this.onChange}\n                        options={{\n                            previewRender(plainText) {\n                                return ReactDOMServer.renderToString(<ReactMarkdown>{plainText}</ReactMarkdown>);\n                            }\n                        }}\n                    />\n                    </>\n                }\n                <input className='hidden' type=\"number\" name=\"sectionId\" defaultValue={this.props.sectionId} />\n                <textarea className='hidden' name=\"question\" rows=\"10\" id='question'></textarea>\n                {\n                    this.state.load &&\n                    <>\n                        <div className='mcq-options'>\n                            <h3 className='template-headings'>MCQ Options</h3>\n                            <div className='mcq-options-block'>\n                            </div>\n                            <div className='flex-row jc-e mt-10 pb-10'>\n                                <button className='btn btn-secondary btn-small' onClick={this.createMcqOption}>Add option</button>\n                            </div>\n                        </div>\n                        <input className='hidden' type=\"submit\" id='submit-question-form' />\n                    </>\n                }\n            </form>\n        )\n    }\n}\n\nexport default MCQSingleCorrectTemplate;"]},"metadata":{},"sourceType":"module"}