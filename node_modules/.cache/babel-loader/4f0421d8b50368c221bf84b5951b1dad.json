{"ast":null,"code":"ace.define(\"ace/mode/vhdl_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var VHDLHighlightRules = function () {\n    var keywords = \"access|after|ailas|all|architecture|assert|attribute|\" + \"begin|block|buffer|bus|case|component|configuration|\" + \"disconnect|downto|else|elsif|end|entity|file|for|function|\" + \"generate|generic|guarded|if|impure|in|inertial|inout|is|\" + \"label|linkage|literal|loop|mapnew|next|of|on|open|\" + \"others|out|port|process|pure|range|record|reject|\" + \"report|return|select|shared|subtype|then|to|transport|\" + \"type|unaffected|united|until|wait|when|while|with\";\n    var storageType = \"bit|bit_vector|boolean|character|integer|line|natural|\" + \"positive|real|register|severity|signal|signed|\" + \"std_logic|std_logic_vector|string||text|time|unsigned|\" + \"variable\";\n    var storageModifiers = \"array|constant\";\n    var keywordOperators = \"abs|and|mod|nand|nor|not|rem|rol|ror|sla|sll|sra\" + \"srl|xnor|xor\";\n    var builtinConstants = \"true|false|null\";\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword.operator\": keywordOperators,\n      \"keyword\": keywords,\n      \"constant.language\": builtinConstants,\n      \"storage.modifier\": storageModifiers,\n      \"storage.type\": storageType\n    }, \"identifier\", true);\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"--.*$\"\n      }, {\n        token: \"string\",\n        // \" string\n        regex: '\".*?\"'\n      }, {\n        token: \"string\",\n        // ' string\n        regex: \"'.*?'\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n      }, {\n        token: \"keyword\",\n        // pre-compiler directives\n        regex: \"\\\\s*(?:library|package|use)\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"&|\\\\*|\\\\+|\\\\-|\\\\/|<|=|>|\\\\||=>|\\\\*\\\\*|:=|\\\\/=|>=|<=|<>\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"\\\\'|\\\\:|\\\\,|\\\\;|\\\\.\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[(]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }]\n    };\n  };\n\n  oop.inherits(VHDLHighlightRules, TextHighlightRules);\n  exports.VHDLHighlightRules = VHDLHighlightRules;\n});\nace.define(\"ace/mode/vhdl\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/vhdl_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var VHDLHighlightRules = acequire(\"./vhdl_highlight_rules\").VHDLHighlightRules;\n\n  var Mode = function () {\n    this.HighlightRules = VHDLHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n    this.$id = \"ace/mode/vhdl\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});","map":{"version":3,"sources":["/Users/ishwarbaisla/Documents/GitHub/admin/node_modules/brace/mode/vhdl.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","VHDLHighlightRules","keywords","storageType","storageModifiers","keywordOperators","builtinConstants","keywordMapper","createKeywordMapper","$rules","token","regex","inherits","TextMode","Mode","HighlightRules","$behaviour","$defaultBehaviour","lineCommentStart","$id","call","prototype"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/vhdl_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar VHDLHighlightRules = function() {\n\n\n    \n    var keywords = \"access|after|ailas|all|architecture|assert|attribute|\"+\n                   \"begin|block|buffer|bus|case|component|configuration|\"+\n                   \"disconnect|downto|else|elsif|end|entity|file|for|function|\"+\n                   \"generate|generic|guarded|if|impure|in|inertial|inout|is|\"+\n                   \"label|linkage|literal|loop|mapnew|next|of|on|open|\"+\n                   \"others|out|port|process|pure|range|record|reject|\"+\n                   \"report|return|select|shared|subtype|then|to|transport|\"+\n                   \"type|unaffected|united|until|wait|when|while|with\";\n    \n    var storageType = \"bit|bit_vector|boolean|character|integer|line|natural|\"+\n                      \"positive|real|register|severity|signal|signed|\"+\n                      \"std_logic|std_logic_vector|string||text|time|unsigned|\"+\n                      \"variable\";\n    \n    var storageModifiers = \"array|constant\";\n    \n    var keywordOperators = \"abs|and|mod|nand|nor|not|rem|rol|ror|sla|sll|sra\"+\n                           \"srl|xnor|xor\";\n    \n    var builtinConstants = (\n        \"true|false|null\"\n    );\n\n\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword.operator\": keywordOperators,\n        \"keyword\": keywords,\n        \"constant.language\": builtinConstants,\n        \"storage.modifier\": storageModifiers,\n        \"storage.type\": storageType\n    }, \"identifier\", true);\n\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment\",\n            regex : \"--.*$\"\n        }, {\n            token : \"string\",           // \" string\n            regex : '\".*?\"'\n        }, {\n            token : \"string\",           // ' string\n            regex : \"'.*?'\"\n        }, {\n            token : \"constant.numeric\", // float\n            regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n        }, {\n            token : \"keyword\", // pre-compiler directives\n            regex : \"\\\\s*(?:library|package|use)\\\\b\"\n        }, {\n            token : keywordMapper,\n            regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n        }, {\n            token : \"keyword.operator\",\n            regex : \"&|\\\\*|\\\\+|\\\\-|\\\\/|<|=|>|\\\\||=>|\\\\*\\\\*|:=|\\\\/=|>=|<=|<>\" \n        }, {\n              token : \"punctuation.operator\",\n              regex : \"\\\\'|\\\\:|\\\\,|\\\\;|\\\\.\"\n        },{\n            token : \"paren.lparen\",\n            regex : \"[[(]\"\n        }, {\n            token : \"paren.rparen\",\n            regex : \"[\\\\])]\"\n        }, {\n            token : \"text\",\n            regex : \"\\\\s+\"\n        } ]\n\n       \n    };\n};\n\noop.inherits(VHDLHighlightRules, TextHighlightRules);\n\nexports.VHDLHighlightRules = VHDLHighlightRules;\n});\n\nace.define(\"ace/mode/vhdl\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/vhdl_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar VHDLHighlightRules = acequire(\"./vhdl_highlight_rules\").VHDLHighlightRules;\n\nvar Mode = function() {\n    this.HighlightRules = VHDLHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \"--\";\n\n    this.$id = \"ace/mode/vhdl\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n\n});\n"]},"metadata":{},"sourceType":"script"}