{"ast":null,"code":"var _jsxFileName = \"/Volumes/Personal/SRM/Major Project/React JS/admin/src/components/ViewExams.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport LoaderHeading from './util/LoaderHeading';\nimport ExamCard from './util/ExamCard';\nimport PageNavigateButton from './util/PageNavigateButton';\nimport ViewExamHeaderOptions from './util/ViewExamHeaderOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ViewExams() {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [demandPage, setDemandPage] = useState(1);\n  const [serialNumber, setSerialNumber] = useState(1);\n  const [fetchedData, setFetchedData] = useState([]);\n\n  const getData = async url => {\n    const response = await fetch(url, {\n      method: 'GET'\n    });\n    return response.json();\n  };\n\n  const loadExams = () => {\n    let URL = 'http://localhost:8080/UploadToS3/admins?page=';\n    URL += demandPage;\n    URL += '&limit=';\n    let entityPerPage = localStorage.getItem('perPageExams');\n\n    if (!entityPerPage) {\n      localStorage.setItem('perPageExams', 2);\n      entityPerPage = 2;\n    } else entityPerPage = parseInt(entityPerPage);\n\n    URL += entityPerPage;\n    let refreshBtn = document.getElementById('refresh-btn');\n    refreshBtn.innerHTML = '<i class=\"fas fa-sync fa-spin\"></i>';\n    getData(URL).then(data => {\n      refreshBtn.innerHTML = '<i class=\"fas fa-sync\"></i>';\n      setSerialNumber(1);\n      let count = data.count;\n      data = data.data;\n      let prepareData = [];\n\n      for (let i = 0; i < data.length; i += 2) {\n        let temp = [];\n        temp.push(data[i]);\n        if (i + 1 < data.length) temp.push(data[i + 1]);\n        prepareData.push(temp);\n      }\n\n      console.log(prepareData);\n      setFetchedData(prepareData);\n      let tp = Math.ceil(count / entityPerPage);\n      setTotalPages(tp);\n      console.log('Total Pages: ', tp);\n      document.getElementById('current-page').innerText = demandPage + '/' + totalPages;\n    });\n  };\n\n  const nextPage = () => {\n    let dp = currentPage;\n    dp = dp < totalPages ? dp + 1 : dp;\n    setDemandPage(dp);\n    setCurrentPage(dp);\n  };\n\n  const prevPage = () => {\n    let dp = currentPage;\n    dp = dp > 1 ? dp - 1 : dp;\n    setDemandPage(dp);\n    setCurrentPage(dp);\n  };\n\n  const pageNumberNavigate = () => {\n    let pageElements = document.getElementsByName('pageNumber');\n\n    if (pageElements) {\n      for (let i = 0; i < pageElements.length; i++) {\n        if (pageElements[i].checked) {\n          currentPage = pageElements[i].value;\n          demandPage = currentPage;\n          break;\n        }\n      }\n    }\n\n    loadExams();\n  };\n\n  useEffect(() => {\n    loadExams();\n  }, []);\n  useEffect(() => {\n    loadExams();\n  }, [demandPage, totalPages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LoaderHeading, {\n      description: \"Exams\",\n      component: /*#__PURE__*/_jsxDEV(ViewExamHeaderOptions, {\n        onclick: loadExams\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-loaded\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: fetchedData.map((d, key) => {\n            if (d.length == 2) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(ExamCard, {\n                  firstName: d[0].firstName,\n                  lastName: d[0].lastName,\n                  email: d[0].email,\n                  contact: d[0].contact\n                }, d[0].adminId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ExamCard, {\n                  firstName: d[1].firstName,\n                  lastName: d[1].lastName,\n                  email: d[1].email,\n                  contact: d[1].contact\n                }, d[1].adminId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 40\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(ExamCard, {\n                  firstName: d[0].firstName,\n                  lastName: d[0].lastName,\n                  email: d[0].email,\n                  contact: d[0].contact\n                }, d[0].adminId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 40\n              }, this);\n            }\n\n            return;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exam-page-navigation-btns-padding\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-row jc-sb exam-page-navigation-btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"prev-btn\",\n            className: \"btn btn-dark btn-small\",\n            onClick: prevPage,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"next-btn\",\n            className: \"btn btn-primary btn-small\",\n            onClick: nextPage,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ViewExams, \"FYtH2nAMi/s0KvJ8FnJWQ/GffGI=\");\n\n_c = ViewExams;\nexport default ViewExams;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewExams\");","map":{"version":3,"sources":["/Volumes/Personal/SRM/Major Project/React JS/admin/src/components/ViewExams.js"],"names":["React","useState","useEffect","LoaderHeading","ExamCard","PageNavigateButton","ViewExamHeaderOptions","ViewExams","currentPage","setCurrentPage","totalPages","setTotalPages","demandPage","setDemandPage","serialNumber","setSerialNumber","fetchedData","setFetchedData","getData","url","response","fetch","method","json","loadExams","URL","entityPerPage","localStorage","getItem","setItem","parseInt","refreshBtn","document","getElementById","innerHTML","then","data","count","prepareData","i","length","temp","push","console","log","tp","Math","ceil","innerText","nextPage","dp","prevPage","pageNumberNavigate","pageElements","getElementsByName","checked","value","map","d","key","firstName","lastName","email","contact","adminId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport LoaderHeading from './util/LoaderHeading';\nimport ExamCard from './util/ExamCard';\nimport PageNavigateButton from './util/PageNavigateButton';\nimport ViewExamHeaderOptions from './util/ViewExamHeaderOptions';\n\nfunction ViewExams() {\n    \n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(1);\n    const [demandPage, setDemandPage] = useState(1);\n    const [serialNumber, setSerialNumber] = useState(1);\n\n    const [fetchedData, setFetchedData] = useState([]);\n\n    const getData = async (url) => {\n        const response = await fetch(url, {\n            method: 'GET'\n        });\n        return response.json(); \n    }\n\n    const loadExams = () => {\n        let URL = 'http://localhost:8080/UploadToS3/admins?page=';\n        URL += demandPage;\n        URL += '&limit=';\n        let entityPerPage = localStorage.getItem('perPageExams');\n        if(!entityPerPage) {\n            localStorage.setItem('perPageExams', 2);\n            entityPerPage = 2;\n        }\n        else entityPerPage = parseInt(entityPerPage);\n        URL += entityPerPage;\n        let refreshBtn = document.getElementById('refresh-btn');\n        refreshBtn.innerHTML = '<i class=\"fas fa-sync fa-spin\"></i>';\n        \n        getData(URL)\n        .then(data => {\n            refreshBtn.innerHTML = '<i class=\"fas fa-sync\"></i>';\n            setSerialNumber(1);\n            let count = data.count;\n            data = data.data;\n            let prepareData = [];\n            for(let i=0; i<data.length; i+=2) {\n                let temp = [];\n                temp.push(data[i]);\n                if(i+1 < data.length)\n                    temp.push(data[i+1]);\n                prepareData.push(temp);\n            }\n            console.log(prepareData);\n            setFetchedData(prepareData);\n\n            let tp = Math.ceil(count/entityPerPage);\n            setTotalPages(tp);\n            console.log('Total Pages: ', tp);\n            document.getElementById('current-page').innerText = demandPage + '/' + totalPages;\n        });\n    }\n\n    const nextPage = () => {\n        let dp = currentPage;\n        dp = dp < totalPages ? dp + 1 : dp;\n        setDemandPage(dp);\n        setCurrentPage(dp);\n    }\n\n    const prevPage = () => {\n        let dp = currentPage;\n        dp = dp > 1 ? dp - 1 : dp;\n        setDemandPage(dp);\n        setCurrentPage(dp);\n    }\n\n    const pageNumberNavigate = () => {\n        let pageElements = document.getElementsByName('pageNumber');\n        if(pageElements) {\n            for(let i=0; i<pageElements.length; i++) {\n                if(pageElements[i].checked) {\n                    currentPage = pageElements[i].value;\n                    demandPage = currentPage;\n                    break;\n                }\n            }\n        }\n        loadExams();\n    }\n\n    useEffect(() => {\n        loadExams();\n    }, []);\n\n    useEffect(() => {\n        loadExams();\n    }, [demandPage, totalPages]);\n\n    return (\n    <>\n        <LoaderHeading \n            description='Exams'\n            component={<ViewExamHeaderOptions \n                            onclick={loadExams}\n                        />}\n        />\n        <div className='content-loaded'>\n            <div>\n                <div className=''>\n                    {\n                        fetchedData.map((d, key) => {\n                            if(d.length == 2) {\n                                return <div>\n                                    <ExamCard \n                                        key={d[0].adminId}\n                                        firstName={d[0].firstName}\n                                        lastName={d[0].lastName}\n                                        email={d[0].email}\n                                        contact={d[0].contact}\n                                    />\n                                    <ExamCard \n                                        key={d[1].adminId}\n                                        firstName={d[1].firstName}\n                                        lastName={d[1].lastName}\n                                        email={d[1].email}\n                                        contact={d[1].contact}\n                                    />\n                                </div>\n                            }\n                            else {\n                                return <div>\n                                    <ExamCard \n                                        key={d[0].adminId}\n                                        firstName={d[0].firstName}\n                                        lastName={d[0].lastName}\n                                        email={d[0].email}\n                                        contact={d[0].contact}\n                                    />\n                                    <div></div>\n                                </div>\n                            }\n                            return \n                        })\n                    }\n                </div>\n                <div className='exam-page-navigation-btns-padding'></div>\n                <div className='flex-row jc-sb exam-page-navigation-btns'>\n                    <button id=\"prev-btn\" className='btn btn-dark btn-small' onClick={prevPage} >Previous</button>\n                    <button id=\"next-btn\" className='btn btn-primary btn-small' onClick={nextPage}>Next</button>\n                </div>\n                {/* <div className='page-navigate-btn-container'>\n                    {\n                        pages.map((d, key) => {\n                            return <PageNavigateButton\n                                key={key}\n                                number={d}\n                                onclick={loadExams}\n                            />\n                        })\n                    }\n                </div> */}\n            \n            </div>\n        </div>\n    </>\n    );\n}\n\nexport default ViewExams;\n"]},"metadata":{},"sourceType":"module"}