{"ast":null,"code":"var _jsxFileName = \"/Volumes/Personal/SRM/Major Project/React JS/admin/src/components/ViewExams.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport LoaderHeading from './util/LoaderHeading';\nimport ExamCard from './util/ExamCard';\nimport PageNavigateButton from './util/PageNavigateButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ViewExams() {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [demandPage, setDemandPage] = useState(1);\n  const [fetchedData, setFetchedData] = useState([]);\n\n  const getData = async url => {\n    const response = await fetch(url, {\n      method: 'GET'\n    });\n    return response.json();\n  };\n\n  const loadExams = () => {\n    let URL = 'http://localhost:8080/UploadToS3/admins?page=';\n    URL += demandPage;\n    URL += '&limit=';\n    let entityPerPage = localStorage.getItem('perPageExams');\n\n    if (!entityPerPage) {\n      localStorage.setItem('perPageExams', 2);\n      entityPerPage = 2;\n    } else entityPerPage = parseInt(entityPerPage);\n\n    URL += entityPerPage;\n    getData(URL).then(data => {\n      console.log('Fetched');\n      console.log(data);\n      setFetchedData(data.data);\n      setTotalPages(Math.ceil(data.count / entityPerPage));\n      console.log('Total Pages: ', totalPages);\n    });\n  };\n\n  const nextPage = () => {\n    let dp = currentPage;\n    dp = dp < totalPages ? dp + 1 : dp;\n    setDemandPage(dp);\n    setCurrentPage(dp); // loadExams();\n  };\n\n  const prevPage = () => {\n    let dp = currentPage;\n    dp = dp > 1 ? dp - 1 : dp;\n    setDemandPage(dp);\n    setCurrentPage(dp); // loadExams();\n  };\n\n  const pageNumberNavigate = () => {\n    let pageElements = document.getElementsByName('pageNumber');\n\n    if (pageElements) {\n      for (let i = 0; i < pageElements.length; i++) {\n        if (pageElements[i].checked) {\n          currentPage = pageElements[i].value;\n          demandPage = currentPage;\n          break;\n        }\n      }\n    }\n\n    loadExams();\n  };\n\n  useEffect(() => {\n    loadExams();\n  }, []);\n  useEffect(() => {\n    loadExams();\n  }, [demandPage]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LoaderHeading, {\n      description: \"Exams\",\n      comp: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-loaded\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-row flex-wrap\",\n          children: fetchedData.map((d, key) => {\n            return /*#__PURE__*/_jsxDEV(ExamCard, {\n              firstName: d.firstName,\n              lastName: d.lastName,\n              email: d.email,\n              contact: d.contact\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exam-page-navigation-btns-padding\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-row jc-sb exam-page-navigation-btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"prev-btn\",\n            className: \"btn btn-dark btn-small\",\n            onClick: prevPage,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"next-btn\",\n            className: \"btn btn-primary btn-small\",\n            onClick: nextPage,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ViewExams, \"GqtX9iWxoGh6DtO6QzjQEb1s99s=\");\n\n_c = ViewExams;\nexport default ViewExams;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewExams\");","map":{"version":3,"sources":["/Volumes/Personal/SRM/Major Project/React JS/admin/src/components/ViewExams.js"],"names":["React","useState","useEffect","LoaderHeading","ExamCard","PageNavigateButton","ViewExams","currentPage","setCurrentPage","totalPages","setTotalPages","demandPage","setDemandPage","fetchedData","setFetchedData","getData","url","response","fetch","method","json","loadExams","URL","entityPerPage","localStorage","getItem","setItem","parseInt","then","data","console","log","Math","ceil","count","nextPage","dp","prevPage","pageNumberNavigate","pageElements","document","getElementsByName","i","length","checked","value","map","d","key","firstName","lastName","email","contact"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAEjB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,CAAD,CAA5C;AAEA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMc,OAAO,GAAG,MAAOC,GAAP,IAAe;AAC3B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAC9BG,MAAAA,MAAM,EAAE;AADsB,KAAN,CAA5B;AAGA,WAAOF,QAAQ,CAACG,IAAT,EAAP;AACH,GALD;;AAOA,QAAMC,SAAS,GAAG,MAAM;AACpB,QAAIC,GAAG,GAAG,+CAAV;AACAA,IAAAA,GAAG,IAAIX,UAAP;AACAW,IAAAA,GAAG,IAAI,SAAP;AACA,QAAIC,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAApB;;AACA,QAAG,CAACF,aAAJ,EAAmB;AACfC,MAAAA,YAAY,CAACE,OAAb,CAAqB,cAArB,EAAqC,CAArC;AACAH,MAAAA,aAAa,GAAG,CAAhB;AACH,KAHD,MAIKA,aAAa,GAAGI,QAAQ,CAACJ,aAAD,CAAxB;;AACLD,IAAAA,GAAG,IAAIC,aAAP;AACAR,IAAAA,OAAO,CAACO,GAAD,CAAP,CACCM,IADD,CACMC,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAf,MAAAA,cAAc,CAACe,IAAI,CAACA,IAAN,CAAd;AACAnB,MAAAA,aAAa,CAACsB,IAAI,CAACC,IAAL,CAAUJ,IAAI,CAACK,KAAL,GAAWX,aAArB,CAAD,CAAb;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BtB,UAA7B;AACH,KAPD;AAQH,GAnBD;;AAqBA,QAAM0B,QAAQ,GAAG,MAAM;AACnB,QAAIC,EAAE,GAAG7B,WAAT;AACA6B,IAAAA,EAAE,GAAGA,EAAE,GAAG3B,UAAL,GAAkB2B,EAAE,GAAG,CAAvB,GAA2BA,EAAhC;AACAxB,IAAAA,aAAa,CAACwB,EAAD,CAAb;AACA5B,IAAAA,cAAc,CAAC4B,EAAD,CAAd,CAJmB,CAKnB;AACH,GAND;;AAQA,QAAMC,QAAQ,GAAG,MAAM;AACnB,QAAID,EAAE,GAAG7B,WAAT;AACA6B,IAAAA,EAAE,GAAGA,EAAE,GAAG,CAAL,GAASA,EAAE,GAAG,CAAd,GAAkBA,EAAvB;AACAxB,IAAAA,aAAa,CAACwB,EAAD,CAAb;AACA5B,IAAAA,cAAc,CAAC4B,EAAD,CAAd,CAJmB,CAKnB;AACH,GAND;;AAQA,QAAME,kBAAkB,GAAG,MAAM;AAC7B,QAAIC,YAAY,GAAGC,QAAQ,CAACC,iBAAT,CAA2B,YAA3B,CAAnB;;AACA,QAAGF,YAAH,EAAiB;AACb,WAAI,IAAIG,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,YAAY,CAACI,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,YAAGH,YAAY,CAACG,CAAD,CAAZ,CAAgBE,OAAnB,EAA4B;AACxBrC,UAAAA,WAAW,GAAGgC,YAAY,CAACG,CAAD,CAAZ,CAAgBG,KAA9B;AACAlC,UAAAA,UAAU,GAAGJ,WAAb;AACA;AACH;AACJ;AACJ;;AACDc,IAAAA,SAAS;AACZ,GAZD;;AAcAnB,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIAnB,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,SAAS;AACZ,GAFQ,EAEN,CAACV,UAAD,CAFM,CAAT;AAIA,sBACA;AAAA,4BACI,QAAC,aAAD;AACI,MAAA,WAAW,EAAC,OADhB;AAEI,MAAA,IAAI;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBAEQE,WAAW,CAACiC,GAAZ,CAAgB,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACxB,gCAAO,QAAC,QAAD;AAEH,cAAA,SAAS,EAAED,CAAC,CAACE,SAFV;AAGH,cAAA,QAAQ,EAAEF,CAAC,CAACG,QAHT;AAIH,cAAA,KAAK,EAAEH,CAAC,CAACI,KAJN;AAKH,cAAA,OAAO,EAAEJ,CAAC,CAACK;AALR,eACEJ,GADF;AAAA;AAAA;AAAA;AAAA,oBAAP;AAOH,WARD;AAFR;AAAA;AAAA;AAAA;AAAA,gBADJ,eAcI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAeI;AAAK,UAAA,SAAS,EAAC,0CAAf;AAAA,kCACI;AAAQ,YAAA,EAAE,EAAC,UAAX;AAAsB,YAAA,SAAS,EAAC,wBAAhC;AAAyD,YAAA,OAAO,EAAEX,QAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,EAAE,EAAC,UAAX;AAAsB,YAAA,SAAS,EAAC,2BAAhC;AAA4D,YAAA,OAAO,EAAEF,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADA;AA0CH;;GApHQ7B,S;;KAAAA,S;AAsHT,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport LoaderHeading from './util/LoaderHeading';\nimport ExamCard from './util/ExamCard';\nimport PageNavigateButton from './util/PageNavigateButton';\n\nfunction ViewExams() {\n    \n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(1);\n    const [demandPage, setDemandPage] = useState(1);\n\n    const [fetchedData, setFetchedData] = useState([]);\n\n    const getData = async (url) => {\n        const response = await fetch(url, {\n            method: 'GET'\n        });\n        return response.json(); \n    }\n\n    const loadExams = () => {\n        let URL = 'http://localhost:8080/UploadToS3/admins?page=';\n        URL += demandPage;\n        URL += '&limit=';\n        let entityPerPage = localStorage.getItem('perPageExams');\n        if(!entityPerPage) {\n            localStorage.setItem('perPageExams', 2);\n            entityPerPage = 2;\n        }\n        else entityPerPage = parseInt(entityPerPage);\n        URL += entityPerPage;\n        getData(URL)\n        .then(data => {\n            console.log('Fetched');\n            console.log(data);\n            setFetchedData(data.data);\n            setTotalPages(Math.ceil(data.count/entityPerPage));\n            console.log('Total Pages: ', totalPages);\n        });\n    }\n\n    const nextPage = () => {\n        let dp = currentPage;\n        dp = dp < totalPages ? dp + 1 : dp;\n        setDemandPage(dp);\n        setCurrentPage(dp);\n        // loadExams();\n    }\n\n    const prevPage = () => {\n        let dp = currentPage;\n        dp = dp > 1 ? dp - 1 : dp;\n        setDemandPage(dp);\n        setCurrentPage(dp);\n        // loadExams();\n    }\n\n    const pageNumberNavigate = () => {\n        let pageElements = document.getElementsByName('pageNumber');\n        if(pageElements) {\n            for(let i=0; i<pageElements.length; i++) {\n                if(pageElements[i].checked) {\n                    currentPage = pageElements[i].value;\n                    demandPage = currentPage;\n                    break;\n                }\n            }\n        }\n        loadExams();\n    }\n\n    useEffect(() => {\n        loadExams();\n    }, []);\n\n    useEffect(() => {\n        loadExams();\n    }, [demandPage]);\n\n    return (\n    <>\n        <LoaderHeading \n            description='Exams'\n            comp\n        />\n        <div className='content-loaded'>\n            <div>\n                <div className='flex-row flex-wrap'>\n                    {\n                        fetchedData.map((d, key) => {\n                            return <ExamCard \n                                key={key}\n                                firstName={d.firstName}\n                                lastName={d.lastName}\n                                email={d.email}\n                                contact={d.contact}\n                            />\n                        })\n                    }\n                </div>\n                <div className='exam-page-navigation-btns-padding'></div>\n                <div className='flex-row jc-sb exam-page-navigation-btns'>\n                    <button id=\"prev-btn\" className='btn btn-dark btn-small' onClick={prevPage} >Previous</button>\n                    <button id=\"next-btn\" className='btn btn-primary btn-small' onClick={nextPage}>Next</button>\n                </div>\n                {/* <div className='page-navigate-btn-container'>\n                    {\n                        pages.map((d, key) => {\n                            return <PageNavigateButton\n                                key={key}\n                                number={d}\n                                onclick={loadExams}\n                            />\n                        })\n                    }\n                </div> */}\n            \n            </div>\n        </div>\n    </>\n    );\n}\n\nexport default ViewExams;\n"]},"metadata":{},"sourceType":"module"}