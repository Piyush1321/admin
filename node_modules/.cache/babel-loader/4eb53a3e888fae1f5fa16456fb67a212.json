{"ast":null,"code":"var _jsxFileName = \"/Volumes/Personal/SRM/Major Project/React JS/admin/src/components/ViewExams.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport LoaderHeading from './util/LoaderHeading';\nimport ExamCard from './util/ExamCard';\nimport PageNavigateButton from './util/PageNavigateButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ViewExams() {\n  _s();\n\n  var currentPage = 1;\n  var totalPages = 10;\n  var demandPage = 1;\n  const [fetchedData, setFetchedData] = useState([]);\n  const [pages, setPages] = useState([]);\n\n  async function getData(url) {\n    const response = await fetch(url, {\n      method: 'GET'\n    });\n    return response.json();\n  }\n\n  const loadExams = () => {\n    let URL = 'http://localhost:8080/UploadToS3/admins?page=';\n    URL += demandPage;\n    URL += '&limit=';\n    let entityPerPage = localStorage.getItem('perPageExams');\n\n    if (!entityPerPage) {\n      localStorage.setItem('perPageExams', 2);\n      entityPerPage = 2;\n    } else entityPerPage = parseInt(entityPerPage);\n\n    URL += entityPerPage;\n    getData(URL).then(data => {\n      console.log(data);\n      setFetchedData(data.data);\n      totalPages = Math.ceil(data.count / entityPerPage);\n      console.log('total pages: ', totalPages);\n      let pagesButton = [];\n\n      for (let i = 0; i < totalPages; i++) {\n        pagesButton.push(i + 1);\n      }\n\n      setPages(pagesButton);\n    });\n  };\n\n  const nextPage = () => {\n    console.log(currentPage);\n    demandPage = currentPage + 1;\n    demandPage = demandPage > totalPages ? currentPage : demandPage;\n    console.log(demandPage);\n    loadExams();\n  };\n\n  const prevPage = () => {\n    demandPage = currentPage - 1;\n    demandPage = demandPage < 1 ? currentPage : demandPage;\n    loadExams();\n  };\n\n  const pageNumberNavigate = () => {\n    let pageElements = document.getElementsByName('pageNumber');\n\n    if (pageElements) {\n      for (let i = 0; i < pageElements.length; i++) {\n        if (pageElements[i].checked) {\n          currentPage = pageElements[i].value;\n          demandPage = currentPage;\n          break;\n        }\n      }\n    }\n\n    loadExams();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LoaderHeading, {\n      description: \"Exams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-loaded\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: fetchedData.map((d, key) => {\n            return /*#__PURE__*/_jsxDEV(ExamCard, {\n              firstName: d.firstName,\n              lastName: d.lastName,\n              email: d.email,\n              contact: d.contact\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exam-page-navigation-btns-padding\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-row jc-sb exam-page-navigation-btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-dark btn-small\",\n            onClick: prevPage,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-small\",\n            onClick: nextPage,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ViewExams, \"1sjf9Du38FWuBtzV3A6tSLjUtmU=\");\n\n_c = ViewExams;\nexport default ViewExams;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewExams\");","map":{"version":3,"sources":["/Volumes/Personal/SRM/Major Project/React JS/admin/src/components/ViewExams.js"],"names":["React","useState","LoaderHeading","ExamCard","PageNavigateButton","ViewExams","currentPage","totalPages","demandPage","fetchedData","setFetchedData","pages","setPages","getData","url","response","fetch","method","json","loadExams","URL","entityPerPage","localStorage","getItem","setItem","parseInt","then","data","console","log","Math","ceil","count","pagesButton","i","push","nextPage","prevPage","pageNumberNavigate","pageElements","document","getElementsByName","length","checked","value","map","d","key","firstName","lastName","email","contact"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAEjB,MAAIC,WAAW,GAAG,CAAlB;AACA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,UAAU,GAAG,CAAjB;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;;AAEA,iBAAeY,OAAf,CAAuBC,GAAvB,EAA4B;AACxB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAC9BG,MAAAA,MAAM,EAAE;AADsB,KAAN,CAA5B;AAGA,WAAOF,QAAQ,CAACG,IAAT,EAAP;AACH;;AAID,QAAMC,SAAS,GAAG,MAAM;AACpB,QAAIC,GAAG,GAAG,+CAAV;AACAA,IAAAA,GAAG,IAAIZ,UAAP;AACAY,IAAAA,GAAG,IAAI,SAAP;AACA,QAAIC,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAApB;;AACA,QAAG,CAACF,aAAJ,EAAmB;AACfC,MAAAA,YAAY,CAACE,OAAb,CAAqB,cAArB,EAAqC,CAArC;AACAH,MAAAA,aAAa,GAAG,CAAhB;AACH,KAHD,MAIKA,aAAa,GAAGI,QAAQ,CAACJ,aAAD,CAAxB;;AACLD,IAAAA,GAAG,IAAIC,aAAP;AACAR,IAAAA,OAAO,CAACO,GAAD,CAAP,CACCM,IADD,CACMC,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAjB,MAAAA,cAAc,CAACiB,IAAI,CAACA,IAAN,CAAd;AACApB,MAAAA,UAAU,GAAGuB,IAAI,CAACC,IAAL,CAAUJ,IAAI,CAACK,KAAL,GAAWX,aAArB,CAAb;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BtB,UAA7B;AACA,UAAI0B,WAAW,GAAG,EAAlB;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC3B,UAAf,EAA2B2B,CAAC,EAA5B,EAAgC;AAC5BD,QAAAA,WAAW,CAACE,IAAZ,CAAiBD,CAAC,GAAC,CAAnB;AACH;;AACDtB,MAAAA,QAAQ,CAACqB,WAAD,CAAR;AACH,KAXD;AAYH,GAvBD;;AAyBA,QAAMG,QAAQ,GAAG,MAAM;AACnBR,IAAAA,OAAO,CAACC,GAAR,CAAYvB,WAAZ;AACAE,IAAAA,UAAU,GAAGF,WAAW,GAAG,CAA3B;AACAE,IAAAA,UAAU,GAAGA,UAAU,GAAGD,UAAb,GAA0BD,WAA1B,GAAwCE,UAArD;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAYrB,UAAZ;AACAW,IAAAA,SAAS;AACZ,GAND;;AAOA,QAAMkB,QAAQ,GAAG,MAAM;AACnB7B,IAAAA,UAAU,GAAGF,WAAW,GAAG,CAA3B;AACAE,IAAAA,UAAU,GAAGA,UAAU,GAAG,CAAb,GAAiBF,WAAjB,GAA+BE,UAA5C;AACAW,IAAAA,SAAS;AACZ,GAJD;;AAKA,QAAMmB,kBAAkB,GAAG,MAAM;AAC7B,QAAIC,YAAY,GAAGC,QAAQ,CAACC,iBAAT,CAA2B,YAA3B,CAAnB;;AACA,QAAGF,YAAH,EAAiB;AACb,WAAI,IAAIL,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACK,YAAY,CAACG,MAA5B,EAAoCR,CAAC,EAArC,EAAyC;AACrC,YAAGK,YAAY,CAACL,CAAD,CAAZ,CAAgBS,OAAnB,EAA4B;AACxBrC,UAAAA,WAAW,GAAGiC,YAAY,CAACL,CAAD,CAAZ,CAAgBU,KAA9B;AACApC,UAAAA,UAAU,GAAGF,WAAb;AACA;AACH;AACJ;AACJ;;AACDa,IAAAA,SAAS;AACZ,GAZD;;AAcA,sBACA;AAAA,4BACI,QAAC,aAAD;AACI,MAAA,WAAW,EAAC;AADhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAA,gCACI;AAAA,oBAGQV,WAAW,CAACoC,GAAZ,CAAgB,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACxB,gCAAO,QAAC,QAAD;AAEH,cAAA,SAAS,EAAED,CAAC,CAACE,SAFV;AAGH,cAAA,QAAQ,EAAEF,CAAC,CAACG,QAHT;AAIH,cAAA,KAAK,EAAEH,CAAC,CAACI,KAJN;AAKH,cAAA,OAAO,EAAEJ,CAAC,CAACK;AALR,eACEJ,GADF;AAAA;AAAA;AAAA;AAAA,oBAAP;AAOH,WARD;AAHR;AAAA;AAAA;AAAA;AAAA,gBADJ,eAeI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAfJ,eAgBI;AAAK,UAAA,SAAS,EAAC,0CAAf;AAAA,kCACI;AAAQ,YAAA,SAAS,EAAC,wBAAlB;AAA2C,YAAA,OAAO,EAAEV,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,SAAS,EAAC,2BAAlB;AAA8C,YAAA,OAAO,EAAED,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADA;AA0CH;;GA/GQ/B,S;;KAAAA,S;AAiHT,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport LoaderHeading from './util/LoaderHeading';\nimport ExamCard from './util/ExamCard';\nimport PageNavigateButton from './util/PageNavigateButton';\n\nfunction ViewExams() {\n    \n    var currentPage = 1;\n    var totalPages = 10;\n    var demandPage = 1;\n\n    const [fetchedData, setFetchedData] = useState([]);\n    const [pages, setPages] = useState([]);\n\n    async function getData(url) {\n        const response = await fetch(url, {\n            method: 'GET'\n        });\n        return response.json(); \n    }\n\n\n\n    const loadExams = () => {\n        let URL = 'http://localhost:8080/UploadToS3/admins?page=';\n        URL += demandPage;\n        URL += '&limit=';\n        let entityPerPage = localStorage.getItem('perPageExams');\n        if(!entityPerPage) {\n            localStorage.setItem('perPageExams', 2);\n            entityPerPage = 2;\n        }\n        else entityPerPage = parseInt(entityPerPage);\n        URL += entityPerPage;\n        getData(URL)\n        .then(data => {\n            console.log(data);\n            setFetchedData(data.data);\n            totalPages = Math.ceil(data.count/entityPerPage);\n            console.log('total pages: ', totalPages);\n            let pagesButton = [];\n            for(let i=0; i<totalPages; i++) {\n                pagesButton.push(i+1);\n            }\n            setPages(pagesButton);\n        });\n    }\n\n    const nextPage = () => {\n        console.log(currentPage);\n        demandPage = currentPage + 1;\n        demandPage = demandPage > totalPages ? currentPage : demandPage;\n        console.log(demandPage);\n        loadExams();\n    }\n    const prevPage = () => {\n        demandPage = currentPage - 1;\n        demandPage = demandPage < 1 ? currentPage : demandPage;\n        loadExams();\n    }\n    const pageNumberNavigate = () => {\n        let pageElements = document.getElementsByName('pageNumber');\n        if(pageElements) {\n            for(let i=0; i<pageElements.length; i++) {\n                if(pageElements[i].checked) {\n                    currentPage = pageElements[i].value;\n                    demandPage = currentPage;\n                    break;\n                }\n            }\n        }\n        loadExams();\n    }\n\n    return (\n    <>\n        <LoaderHeading \n            description='Exams'\n        />\n        <div className='content-loaded'>\n            <div>\n                <div>\n                    {\n\n                        fetchedData.map((d, key) => {\n                            return <ExamCard \n                                key={key}\n                                firstName={d.firstName}\n                                lastName={d.lastName}\n                                email={d.email}\n                                contact={d.contact}\n                            />\n                        })\n                    }\n                </div>\n                <div className='exam-page-navigation-btns-padding'></div>\n                <div className='flex-row jc-sb exam-page-navigation-btns'>\n                    <button className='btn btn-dark btn-small' onClick={prevPage}>Previous</button>\n                    <button className='btn btn-primary btn-small' onClick={nextPage}>Next</button>\n                </div>\n                {/* <div className='page-navigate-btn-container'>\n                    {\n                        pages.map((d, key) => {\n                            return <PageNavigateButton\n                                key={key}\n                                number={d}\n                                onclick={loadExams}\n                            />\n                        })\n                    }\n                </div> */}\n            \n            </div>\n        </div>\n    </>\n    );\n}\n\nexport default ViewExams;\n"]},"metadata":{},"sourceType":"module"}