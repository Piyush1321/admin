{"ast":null,"code":"var _jsxFileName = \"/Users/ishwarbaisla/Documents/GitHub/admin/src/components/util/questions/MCQSingleCorrectTemplate.js\";\nimport React from 'react';\nimport SimpleMDE from \"react-simplemde-editor\";\nimport ReactDOMServer from \"react-dom/server\";\nimport ReactMarkdown from 'react-markdown';\nimport \"easymde/dist/easymde.min.css\";\nimport Loader from '../../util/Loader';\nimport Flash from '../../services/Flash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MCQSingleCorrectTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addQuestion = e => {\n      e.preventDefault();\n      document.getElementById('question').defaultValue = localStorage.getItem('questionStringFromSimpleMde');\n      console.log('submitted');\n      console.log(JSON.stringify(this.state.question));\n      let mcqOptionAnswer = document.getElementsByName('mcqOptionAnswer');\n      let correctAnswer = null;\n\n      for (let i = 0; i < mcqOptionAnswer.length; i++) {\n        if (mcqOptionAnswer[i].checked) {\n          correctAnswer = i + 1;\n          break;\n        }\n      }\n\n      if (!correctAnswer) {\n        Flash.message('Please select correct option', 'bg-primary');\n        return;\n      }\n\n      console.log(correctAnswer);\n    };\n\n    this.componentDidMount = () => {};\n\n    this.onChange = defaultValue => {\n      localStorage.setItem('questionStringFromSimpleMde', defaultValue);\n    };\n\n    this.createMcqOption = () => {\n      let div = document.createElement('div');\n      div.className = 'mcq-option-container';\n      let div1 = document.createElement('div');\n      let input = document.createElement('input');\n      input.type = 'radio';\n      input.name = 'mcqOptionAnswer';\n      div1.appendChild(input);\n      let div2 = document.createElement('div');\n      let textarea = document.createElement('textarea');\n      textarea.name = 'mcqOption[]';\n      textarea.placeholder = 'Type your option here...';\n      div2.appendChild(textarea);\n      let div3 = document.createElement('div');\n      let i = document.createElement('i');\n      i.className = 'fas fa-trash';\n      i.addEventListener('click', () => {\n        let res = true;\n\n        if (res) {\n          div.remove();\n        }\n      });\n      div3.appendChild(i);\n      div.appendChild(div1);\n      div.appendChild(div2);\n      div.appendChild(div3);\n      let parent = document.getElementsByClassName('mcq-options-block')[0];\n      parent.appendChild(div);\n    };\n\n    this.pickTimeFromSlots = () => {\n      let slots = document.getElementsByName('timeDurationSlots');\n\n      for (let i = 0; i < slots.length; i++) {\n        slots[i].addEventListener('click', e => {\n          document.getElementsByName('timeDuration')[0].defaultValue = e.target.defaultValue;\n        });\n      }\n    };\n\n    this.resetTimeSlots = () => {\n      let slots = document.getElementsByName('timeDurationSlots');\n\n      for (let i = 0; i < slots.length; i++) {\n        slots[i].checked = false;\n      }\n    };\n\n    this.state = {\n      question: '',\n      load: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"question-form\",\n      onSubmit: this.addQuestion,\n      children: [!this.state.load && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), this.state.load && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-container\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"template-headings\",\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SimpleMDE, {\n          defaultValue: this.state.question,\n          onChange: this.onChange,\n          options: {\n            previewRender(plainText) {\n              return ReactDOMServer.renderToString( /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                children: plainText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 70\n              }, this));\n            }\n\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"hidden\",\n        type: \"number\",\n        name: \"sectionId\",\n        defaultValue: this.props.sectionId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"hidden\",\n        name: \"question\",\n        rows: \"10\",\n        id: \"question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), this.state.load && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mcq-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"template-headings\",\n            children: \"MCQ Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mcq-options-block\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-row jc-e mt-10 pb-10\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary btn-small\",\n              onClick: this.createMcqOption,\n              children: \"Add option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"hidden\",\n          type: \"submit\",\n          id: \"submit-question-form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MCQSingleCorrectTemplate;","map":{"version":3,"sources":["/Users/ishwarbaisla/Documents/GitHub/admin/src/components/util/questions/MCQSingleCorrectTemplate.js"],"names":["React","SimpleMDE","ReactDOMServer","ReactMarkdown","Loader","Flash","MCQSingleCorrectTemplate","Component","constructor","props","addQuestion","e","preventDefault","document","getElementById","defaultValue","localStorage","getItem","console","log","JSON","stringify","state","question","mcqOptionAnswer","getElementsByName","correctAnswer","i","length","checked","message","componentDidMount","onChange","setItem","createMcqOption","div","createElement","className","div1","input","type","name","appendChild","div2","textarea","placeholder","div3","addEventListener","res","remove","parent","getElementsByClassName","pickTimeFromSlots","slots","target","resetTimeSlots","load","render","previewRender","plainText","renderToString","sectionId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SimpleMDE from \"react-simplemde-editor\";\nimport ReactDOMServer from \"react-dom/server\";\nimport ReactMarkdown from 'react-markdown';\nimport \"easymde/dist/easymde.min.css\";\nimport Loader from '../../util/Loader';\nimport Flash from '../../services/Flash';\n\nclass MCQSingleCorrectTemplate extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            question: '',\n            load: false\n        }\n    }\n    addQuestion = (e) => {\n        e.preventDefault();\n        document.getElementById('question').defaultValue = localStorage.getItem('questionStringFromSimpleMde');\n        console.log('submitted');\n        console.log(JSON.stringify(this.state.question))\n\n        let mcqOptionAnswer = document.getElementsByName('mcqOptionAnswer');\n        let correctAnswer = null;\n        for(let i=0; i<mcqOptionAnswer.length; i++) {\n            if(mcqOptionAnswer[i].checked) {\n                correctAnswer = i+1;\n                break;\n            }\n        }\n        if(!correctAnswer) {\n            Flash.message('Please select correct option', 'bg-primary');\n            return;\n        }\n        console.log(correctAnswer);\n    }\n\n\n    componentDidMount = () => {\n    }\n    onChange = (defaultValue) => {\n        localStorage.setItem('questionStringFromSimpleMde', defaultValue);\n    }\n    \n\n    createMcqOption = () => {\n        let div = document.createElement('div');\n        div.className = 'mcq-option-container';\n        let div1 = document.createElement('div');\n        let input = document.createElement('input');\n        input.type = 'radio';\n        input.name = 'mcqOptionAnswer';\n        div1.appendChild(input);\n        let div2 = document.createElement('div');\n        let textarea = document.createElement('textarea');\n        textarea.name = 'mcqOption[]'\n        textarea.placeholder = 'Type your option here...'\n        div2.appendChild(textarea);\n        let div3 = document.createElement('div');\n        let i = document.createElement('i');\n        i.className = 'fas fa-trash';\n        i.addEventListener('click', () => {\n            let res = true;\n            if(res) {\n                div.remove();\n            }\n        })\n        div3.appendChild(i);\n        div.appendChild(div1);\n        div.appendChild(div2);\n        div.appendChild(div3);\n        let parent = document.getElementsByClassName('mcq-options-block')[0];\n        parent.appendChild(div);\n    }\n\n    pickTimeFromSlots = () => {\n        let slots = document.getElementsByName('timeDurationSlots');\n        for(let i=0; i<slots.length; i++) {\n            slots[i].addEventListener('click', (e) => {\n                document.getElementsByName('timeDuration')[0].defaultValue = e.target.defaultValue;\n            })\n        }\n    }\n\n    resetTimeSlots = () => {\n        let slots = document.getElementsByName('timeDurationSlots');\n        for(let i=0; i<slots.length; i++) {\n            slots[i].checked = false;\n        }\n    }\n\n    render() {\n        return (\n            <form id='question-form' onSubmit={this.addQuestion}>\n                {\n                    !this.state.load &&\n                    <Loader />\n                }\n                {\n                    this.state.load &&\n                    <>\n                    <div className='question-container'>\n                        <h3 className='template-headings'>Question</h3>\n                    </div>\n                    <SimpleMDE \n                        defaultValue={this.state.question}\n                        onChange={this.onChange}\n                        options={{\n                            previewRender(plainText) {\n                                return ReactDOMServer.renderToString(<ReactMarkdown>{plainText}</ReactMarkdown>);\n                            }\n                        }}\n                    />\n                    </>\n                }\n                <input className='hidden' type=\"number\" name=\"sectionId\" defaultValue={this.props.sectionId} />\n                <textarea className='hidden' name=\"question\" rows=\"10\" id='question'></textarea>\n                {\n                    this.state.load &&\n                    <>\n                        <div className='mcq-options'>\n                            <h3 className='template-headings'>MCQ Options</h3>\n                            <div className='mcq-options-block'>\n                            </div>\n                            <div className='flex-row jc-e mt-10 pb-10'>\n                                <button className='btn btn-secondary btn-small' onClick={this.createMcqOption}>Add option</button>\n                            </div>\n                        </div>\n                        <input className='hidden' type=\"submit\" id='submit-question-form' />\n                    </>\n                }\n            </form>\n        )\n    }\n}\n\nexport default MCQSingleCorrectTemplate;"]},"metadata":{},"sourceType":"module"}