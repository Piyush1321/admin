{"ast":null,"code":"var _jsxFileName = \"/Users/ishwarbaisla/Documents/GitHub/admin/src/components/exam/EditSectionForm.js\";\nimport React from 'react';\nimport Request from '../services/Request';\nimport Flash from '../services/Flash';\nimport $ from 'jquery';\nimport TimeToString from '../services/TimeToString';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass EditSectionForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.viewTimerDurationBlock = () => {\n      document.getElementById('time-duration-block').style.display = 'flex';\n    };\n\n    this.hideTimerDurationBlock = () => {\n      document.getElementById('time-duration-block').style.display = 'none';\n    };\n\n    this.resetForm = () => {\n      let form = document.getElementById('update-section-form');\n      form.reset();\n    };\n\n    this.updateSection = e => {\n      e.preventDefault();\n      let url = \"http://localhost:8080/QuizWit/UpdateSectionDetails\";\n      let data = $('#update-section-form').serialize();\n      Request.post(url, data).then(res => {\n        console.log(res);\n        this.populateResponse(res);\n      });\n      console.log('submitted');\n    };\n\n    this.populateResponse = res => {\n      let responseBlock = document.getElementById('update-section-form').getElementsByClassName('response');\n\n      if (res.error) {\n        Flash.message(res.error, 'bg-danger');\n      }\n\n      if (res.success) {\n        localStorage.setItem('SectionUpdated', this.props.examId);\n        this.resetForm();\n        Flash.message(res.success, 'bg-success');\n        document.getElementById('view-exam-nav-link').click();\n      } else {\n        let log = res.errorLog;\n        let icon = '<i class=\"fas fa-exclamation-circle mr-5\"></i>';\n\n        if (log.examId) {\n          Flash.message(log.examId, 'bg-danger');\n        }\n\n        responseBlock[0].innerHTML = log.title ? icon + log.title : '';\n        responseBlock[1].innerHTML = log.description ? icon + log.description : '';\n        responseBlock[2].innerHTML = log.questionNavigation ? icon + log.questionNavigation : '';\n        responseBlock[3].innerHTML = log.timerType ? icon + log.timerType : '';\n        responseBlock[5].innerHTML = log.timerDuration ? icon + log.timerDuration : '';\n      }\n    };\n\n    this.resetTimeSlots = () => {\n      let slots = document.getElementsByName('timeDurationSlots');\n\n      for (let i = 0; i < slots.length; i++) {\n        slots[i].checked = false;\n      }\n    };\n\n    this.convertTime = e => {\n      let el = e.target;\n      let value = el.value;\n      let response = el.nextElementSibling;\n      let convertedTime = new TimeToString(parseInt(value)).convert();\n      response.innerHTML = convertedTime;\n    };\n\n    this.pickTimeFromSlots = () => {\n      let slots = document.getElementsByName('timeDurationSlots');\n\n      for (let i = 0; i < slots.length; i++) {\n        slots[i].addEventListener('click', e => {\n          document.getElementsByName('timeDuration')[0].value = e.target.value;\n          document.getElementById('time-duration').innerText = new TimeToString(e.target.value).convert();\n        });\n      }\n    };\n\n    this.resetTimeSlots = () => {\n      let slots = document.getElementsByName('timeDurationSlots');\n\n      for (let i = 0; i < slots.length; i++) {\n        slots[i].checked = false;\n      }\n    };\n\n    let tt = 1;\n\n    if (this.props.sectionDetails.setQuestionTimer == '1') {\n      tt = 2;\n    }\n\n    let duration = null;\n    if (tt == 1) duration = this.props.sectionDetails.timeDuration;\n    this.state = {\n      questionNavigation: this.props.sectionDetails.questionNavigation,\n      shuffleQuestions: this.props.sectionDetails.shuffleQuestions,\n      timerType: tt,\n      timeDuration: duration\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.timerType == 1) this.viewTimerDurationBlock();\n    this.pickTimeFromSlots();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        className: \"pb-10\",\n        id: \"update-section-form\",\n        onSubmit: this.updateSection,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"hidden\",\n          defaultValue: this.props.sectionId,\n          name: \"sectionId\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-block\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-custom\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              defaultValue: this.props.sectionDetails.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"response\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-block\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-custom\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              name: \"description\",\n              rows: \"6\",\n              defaultValue: this.props.sectionDetails.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"response\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"customized-radio-sticky\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Question Navigation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"questionNavigation\",\n                  value: \"1\",\n                  checked: this.state.questionNavigation == '1' ? true : false,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"On\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"questionNavigation\",\n                  value: \"0\",\n                  checked: this.state.questionNavigation == '0' ? true : false,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Off\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"response\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"customized-radio-sticky\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Shuffle Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"shuffleQuestions\",\n                  value: \"1\",\n                  checked: this.state.shuffleQuestions == '1' ? true : false,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"On\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"shuffleQuestions\",\n                  value: \"0\",\n                  checked: this.state.shuffleQuestions == '0' ? true : false,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Off\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"response\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"set-section-timer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-row jc-sb\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"reset-form-btn\",\n            className: \"btn btn-fade btn-small hidden\",\n            onClick: this.resetForm,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"update-form-btn\",\n            className: \"btn btn-primary btn-small hidden\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default EditSectionForm;","map":{"version":3,"sources":["/Users/ishwarbaisla/Documents/GitHub/admin/src/components/exam/EditSectionForm.js"],"names":["React","Request","Flash","$","TimeToString","EditSectionForm","Component","constructor","props","handleChange","e","name","value","target","setState","viewTimerDurationBlock","document","getElementById","style","display","hideTimerDurationBlock","resetForm","form","reset","updateSection","preventDefault","url","data","serialize","post","then","res","console","log","populateResponse","responseBlock","getElementsByClassName","error","message","success","localStorage","setItem","examId","click","errorLog","icon","innerHTML","title","description","questionNavigation","timerType","timerDuration","resetTimeSlots","slots","getElementsByName","i","length","checked","convertTime","el","response","nextElementSibling","convertedTime","parseInt","convert","pickTimeFromSlots","addEventListener","innerText","tt","sectionDetails","setQuestionTimer","duration","timeDuration","state","shuffleQuestions","componentDidMount","render","sectionId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Request from '../services/Request';\nimport Flash from '../services/Flash';\nimport $ from 'jquery'\nimport TimeToString from '../services/TimeToString';\n\nclass EditSectionForm extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        let tt = 1;\n        if(this.props.sectionDetails.setQuestionTimer == '1') {\n            tt = 2;\n        }\n        let duration = null;\n        if(tt == 1)\n            duration = this.props.sectionDetails.timeDuration;\n        this.state = {\n            questionNavigation: this.props.sectionDetails.questionNavigation,\n            shuffleQuestions: this.props.sectionDetails.shuffleQuestions,\n            timerType: tt,\n            timeDuration: duration\n        }\n    }\n\n    handleChange = e => {\n        const { name, value } = e.target;\n    \n        this.setState({\n            [name]: value\n        });\n    };\n\n    viewTimerDurationBlock = () => {\n        document.getElementById('time-duration-block').style.display = 'flex';\n    }\n\n    hideTimerDurationBlock = () => {\n        document.getElementById('time-duration-block').style.display = 'none';\n    }\n\n    resetForm = () => {\n        let form = document.getElementById('update-section-form');\n        form.reset();\n    }\n\n    updateSection = (e) => {\n        e.preventDefault();\n        let url = \"http://localhost:8080/QuizWit/UpdateSectionDetails\";\n\n        let data = $('#update-section-form').serialize();\n\n        Request.post(url, data)\n        .then((res) => {\n            console.log(res);\n            this.populateResponse(res);\n        })\n        \n        console.log('submitted');\n    }\n\n    populateResponse = (res) => {\n        let responseBlock = document.getElementById('update-section-form').getElementsByClassName('response');\n        if(res.error) {\n            Flash.message(res.error, 'bg-danger');\n        }\n        if(res.success) {\n            localStorage.setItem('SectionUpdated', this.props.examId);\n            this.resetForm();\n            Flash.message(res.success, 'bg-success');\n            document.getElementById('view-exam-nav-link').click();\n        }\n        else {\n            let log = res.errorLog;\n            let icon = '<i class=\"fas fa-exclamation-circle mr-5\"></i>';\n            if(log.examId) {\n                Flash.message(log.examId, 'bg-danger');\n            }\n            responseBlock[0].innerHTML = (log.title ? icon + log.title : '');\n            responseBlock[1].innerHTML = (log.description ? icon + log.description : '');\n\n            responseBlock[2].innerHTML = (log.questionNavigation ? icon + log.questionNavigation: '');\n            responseBlock[3].innerHTML = (log.timerType ? icon + log.timerType: '' );\n            responseBlock[5].innerHTML = (log.timerDuration ? icon + log.timerDuration: '' );\n        }\n    }\n    resetTimeSlots = () => {\n        let slots = document.getElementsByName('timeDurationSlots');\n        for(let i=0; i<slots.length; i++) {\n            slots[i].checked = false;\n        }\n    }\n    convertTime = (e) => {\n        let el = e.target;\n        let value = el.value;\n        let response = el.nextElementSibling;\n        let convertedTime = (new TimeToString(parseInt(value))).convert();\n        response.innerHTML = convertedTime;\n    }\n\n\n    pickTimeFromSlots = () => {\n        let slots = document.getElementsByName('timeDurationSlots');\n        for(let i=0; i<slots.length; i++) {\n            slots[i].addEventListener('click', (e) => {\n                document.getElementsByName('timeDuration')[0].value = e.target.value;\n                document.getElementById('time-duration').innerText = (new TimeToString(e.target.value)).convert();\n            })\n        }\n    }\n    resetTimeSlots = () => {\n        let slots = document.getElementsByName('timeDurationSlots');\n        for(let i=0; i<slots.length; i++) {\n            slots[i].checked = false;\n        }\n    }\n    componentDidMount() {\n        if(this.state.timerType == 1)\n            this.viewTimerDurationBlock();\n        this.pickTimeFromSlots();\n    }\n\n    render() {\n        return (\n            <>\n            <form action=\"\" className='pb-10' id=\"update-section-form\" onSubmit={this.updateSection}>\n                <input type=\"hidden\" defaultValue={this.props.sectionId} name=\"sectionId\"/>\n                <div className=\"input-block\">\n                    <div className=\"input-custom\">\n                        <input type=\"text\" name=\"title\" defaultValue={this.props.sectionDetails.title} />\n                        <label>Title</label>\n                        <div className=\"response\"></div>\n                    </div>\n                </div>\n                <div className=\"input-block\">\n                    <div className=\"input-custom\">\n                        <textarea type=\"text\" name=\"description\" rows=\"6\" defaultValue={this.props.sectionDetails.description}></textarea>\n                        <label>Description</label>\n                        <div className=\"response\"></div>\n                    </div>\n                </div>\n                <div className=\"input-block\">\n                    <div className=\"customized-radio-sticky\">\n                        <label>Question Navigation</label>\n                        <div>\n                            <label>\n                                <input type=\"radio\" name=\"questionNavigation\" value=\"1\" checked={this.state.questionNavigation == '1' ? true : false} onChange={this.handleChange} />\n                                <span>On</span>\n                            </label>\n                            <label>\n                                <input type=\"radio\" name=\"questionNavigation\" value=\"0\" checked={this.state.questionNavigation == '0' ? true : false} onChange={this.handleChange} />\n                                <span>Off</span>\n                            </label>\n                        </div>\n                        <div className=\"response\"></div>\n                    </div>\n                    <div className=\"customized-radio-sticky\">\n                        <label>Shuffle Question</label>\n                        <div>\n                            <label>\n                                <input type=\"radio\" name=\"shuffleQuestions\" value=\"1\" checked={this.state.shuffleQuestions == '1' ? true : false} onChange={this.handleChange} />\n                                <span>On</span>\n                            </label>\n                            <label>\n                                <input type=\"radio\" name=\"shuffleQuestions\" value=\"0\" checked={this.state.shuffleQuestions == '0' ? true : false} onChange={this.handleChange} />\n                                <span>Off</span>\n                            </label>\n                        </div>\n                        <div className=\"response\"></div>\n                    </div>\n                </div>\n                <div id='set-section-timer'>\n\n                </div>\n                <div className='flex-row jc-sb'>\n                    <div id='reset-form-btn'  className='btn btn-fade btn-small hidden' onClick={this.resetForm}>Reset</div>\n                    <button id='update-form-btn' className='btn btn-primary btn-small hidden'>Update</button>\n                </div>\n            </form>\n            </>\n        )\n    }\n}\n\nexport default EditSectionForm;"]},"metadata":{},"sourceType":"module"}