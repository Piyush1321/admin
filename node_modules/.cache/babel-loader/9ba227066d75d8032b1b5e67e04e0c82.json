{"ast":null,"code":"ace.define(\"ace/mode/doc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var DocCommentHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.doc.tag\",\n        regex: \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n\n      }, DocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc\",\n        caseInsensitive: true\n      }]\n    };\n  };\n\n  oop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\n  DocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n\n  DocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // doc comment\n      regex: \"\\\\/\\\\*(?=\\\\*)\",\n      next: start\n    };\n  };\n\n  DocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // closing comment\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n\n  exports.DocCommentHighlightRules = DocCommentHighlightRules;\n});\nace.define(\"ace/mode/java_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/doc_comment_highlight_rules\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var DocCommentHighlightRules = acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var JavaHighlightRules = function () {\n    var keywords = \"abstract|continue|for|new|switch|\" + \"assert|default|goto|package|synchronized|\" + \"boolean|do|if|private|this|\" + \"break|double|implements|protected|throw|\" + \"byte|else|import|public|throws|\" + \"case|enum|instanceof|return|transient|\" + \"catch|extends|int|short|try|\" + \"char|final|interface|static|void|\" + \"class|finally|long|strictfp|volatile|\" + \"const|float|native|super|while\";\n    var buildinConstants = \"null|Infinity|NaN|undefined\";\n    var langClasses = \"AbstractMethodError|AssertionError|ClassCircularityError|\" + \"ClassFormatError|Deprecated|EnumConstantNotPresentException|\" + \"ExceptionInInitializerError|IllegalAccessError|\" + \"IllegalThreadStateException|InstantiationError|InternalError|\" + \"NegativeArraySizeException|NoSuchFieldError|Override|Process|\" + \"ProcessBuilder|SecurityManager|StringIndexOutOfBoundsException|\" + \"SuppressWarnings|TypeNotPresentException|UnknownError|\" + \"UnsatisfiedLinkError|UnsupportedClassVersionError|VerifyError|\" + \"InstantiationException|IndexOutOfBoundsException|\" + \"ArrayIndexOutOfBoundsException|CloneNotSupportedException|\" + \"NoSuchFieldException|IllegalArgumentException|NumberFormatException|\" + \"SecurityException|Void|InheritableThreadLocal|IllegalStateException|\" + \"InterruptedException|NoSuchMethodException|IllegalAccessException|\" + \"UnsupportedOperationException|Enum|StrictMath|Package|Compiler|\" + \"Readable|Runtime|StringBuilder|Math|IncompatibleClassChangeError|\" + \"NoSuchMethodError|ThreadLocal|RuntimePermission|ArithmeticException|\" + \"NullPointerException|Long|Integer|Short|Byte|Double|Number|Float|\" + \"Character|Boolean|StackTraceElement|Appendable|StringBuffer|\" + \"Iterable|ThreadGroup|Runnable|Thread|IllegalMonitorStateException|\" + \"StackOverflowError|OutOfMemoryError|VirtualMachineError|\" + \"ArrayStoreException|ClassCastException|LinkageError|\" + \"NoClassDefFoundError|ClassNotFoundException|RuntimeException|\" + \"Exception|ThreadDeath|Error|Throwable|System|ClassLoader|\" + \"Cloneable|Class|CharSequence|Comparable|String|Object\";\n    var keywordMapper = this.createKeywordMapper({\n      \"variable.language\": \"this\",\n      \"keyword\": keywords,\n      \"constant.language\": buildinConstants,\n      \"support.function\": langClasses\n    }, \"identifier\");\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"\\\\/\\\\/.*$\"\n      }, DocCommentHighlightRules.getStartRule(\"doc-start\"), {\n        token: \"comment\",\n        // multi line comment\n        regex: \"\\\\/\\\\*\",\n        next: \"comment\"\n      }, {\n        token: \"string\",\n        // single line\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n      }, {\n        token: \"string\",\n        // single line\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: /0(?:[xX][0-9a-fA-F][0-9a-fA-F_]*|[bB][01][01_]*)[LlSsDdFfYy]?\\b/\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: /[+-]?\\d[\\d_]*(?:(?:\\.[\\d_]*)?(?:[eE][+-]?[\\d_]+)?)?[LlSsDdFfYy]?\\b/\n      }, {\n        token: \"constant.language.boolean\",\n        regex: \"(?:true|false)\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\n      }, {\n        token: \"lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n  };\n\n  oop.inherits(JavaHighlightRules, TextHighlightRules);\n  exports.JavaHighlightRules = JavaHighlightRules;\n});\nace.define(\"ace/mode/drools_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\", \"ace/mode/java_highlight_rules\", \"ace/mode/doc_comment_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n  var JavaHighlightRules = acequire(\"./java_highlight_rules\").JavaHighlightRules;\n  var DocCommentHighlightRules = acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n  var identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\n  var packageIdentifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][\\\\.a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\n\n  var DroolsHighlightRules = function () {\n    var keywords = \"date|effective|expires|lock|on|active|no|loop|auto|focus\" + \"|activation|group|agenda|ruleflow|duration|timer|calendars|refract|direct\" + \"|dialect|salience|enabled|attributes|extends|template\" + \"|function|contains|matches|eval|excludes|soundslike\" + \"|memberof|not|in|or|and|exists|forall|over|from|entry|point|accumulate|acc|collect\" + \"|action|reverse|result|end|init|instanceof|extends|super|boolean|char|byte|short\" + \"|int|long|float|double|this|void|class|new|case|final|if|else|for|while|do\" + \"|default|try|catch|finally|switch|synchronized|return|throw|break|continue|assert\" + \"|modify|static|public|protected|private|abstract|native|transient|volatile\" + \"|strictfp|throws|interface|enum|implements|type|window|trait|no-loop|str\";\n    var langClasses = \"AbstractMethodError|AssertionError|ClassCircularityError|\" + \"ClassFormatError|Deprecated|EnumConstantNotPresentException|\" + \"ExceptionInInitializerError|IllegalAccessError|\" + \"IllegalThreadStateException|InstantiationError|InternalError|\" + \"NegativeArraySizeException|NoSuchFieldError|Override|Process|\" + \"ProcessBuilder|SecurityManager|StringIndexOutOfBoundsException|\" + \"SuppressWarnings|TypeNotPresentException|UnknownError|\" + \"UnsatisfiedLinkError|UnsupportedClassVersionError|VerifyError|\" + \"InstantiationException|IndexOutOfBoundsException|\" + \"ArrayIndexOutOfBoundsException|CloneNotSupportedException|\" + \"NoSuchFieldException|IllegalArgumentException|NumberFormatException|\" + \"SecurityException|Void|InheritableThreadLocal|IllegalStateException|\" + \"InterruptedException|NoSuchMethodException|IllegalAccessException|\" + \"UnsupportedOperationException|Enum|StrictMath|Package|Compiler|\" + \"Readable|Runtime|StringBuilder|Math|IncompatibleClassChangeError|\" + \"NoSuchMethodError|ThreadLocal|RuntimePermission|ArithmeticException|\" + \"NullPointerException|Long|Integer|Short|Byte|Double|Number|Float|\" + \"Character|Boolean|StackTraceElement|Appendable|StringBuffer|\" + \"Iterable|ThreadGroup|Runnable|Thread|IllegalMonitorStateException|\" + \"StackOverflowError|OutOfMemoryError|VirtualMachineError|\" + \"ArrayStoreException|ClassCastException|LinkageError|\" + \"NoClassDefFoundError|ClassNotFoundException|RuntimeException|\" + \"Exception|ThreadDeath|Error|Throwable|System|ClassLoader|\" + \"Cloneable|Class|CharSequence|Comparable|String|Object\";\n    var keywordMapper = this.createKeywordMapper({\n      \"variable.language\": \"this\",\n      \"keyword\": keywords,\n      \"constant.language\": \"null\",\n      \"support.class\": langClasses,\n      \"support.function\": \"retract|update|modify|insert\"\n    }, \"identifier\");\n\n    var stringRules = function () {\n      return [{\n        token: \"string\",\n        // single line\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n      }, {\n        token: \"string\",\n        // single line\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }];\n    };\n\n    var basicPreRules = function (blockCommentRules) {\n      return [{\n        token: \"comment\",\n        regex: \"\\\\/\\\\/.*$\"\n      }, DocCommentHighlightRules.getStartRule(\"doc-start\"), {\n        token: \"comment\",\n        // multi line comment\n        regex: \"\\\\/\\\\*\",\n        next: blockCommentRules\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: \"0[xX][0-9a-fA-F]+\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n      }, {\n        token: \"constant.language.boolean\",\n        regex: \"(?:true|false)\\\\b\"\n      }];\n    };\n\n    var blockCommentRules = function (returnRule) {\n      return [{\n        token: \"comment.block\",\n        // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: returnRule\n      }, {\n        defaultToken: \"comment.block\"\n      }];\n    };\n\n    var basicPostRules = function () {\n      return [{\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\n      }, {\n        token: \"lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }];\n    };\n\n    this.$rules = {\n      \"start\": [].concat(basicPreRules(\"block.comment\"), [{\n        token: \"entity.name.type\",\n        regex: \"@[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(package)(\\\\s+)(\" + packageIdentifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(import)(\\\\s+)(function)(\\\\s+)(\" + packageIdentifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(import)(\\\\s+)(\" + packageIdentifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.type\", \"text\", \"variable\"],\n        regex: \"(global)(\\\\s+)(\" + packageIdentifierRe + \")(\\\\s+)(\" + identifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(declare)(\\\\s+)(trait)(\\\\s+)(\" + identifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(declare)(\\\\s+)(\" + identifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(extends)(\\\\s+)(\" + packageIdentifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\"],\n        regex: \"(rule)(\\\\s+)\",\n        next: \"asset.name\"\n      }], stringRules(), [{\n        token: [\"variable.other\", \"text\", \"text\"],\n        regex: \"(\" + identifierRe + \")(\\\\s*)(:)\"\n      }, {\n        token: [\"keyword\", \"text\"],\n        regex: \"(query)(\\\\s+)\",\n        next: \"asset.name\"\n      }, {\n        token: [\"keyword\", \"text\"],\n        regex: \"(when)(\\\\s*)\"\n      }, {\n        token: [\"keyword\", \"text\"],\n        regex: \"(then)(\\\\s*)\",\n        next: \"java-start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: /[\\[({]/\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\])}]/\n      }], basicPostRules()),\n      \"block.comment\": blockCommentRules(\"start\"),\n      \"asset.name\": [{\n        token: \"entity.name\",\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n      }, {\n        token: \"entity.name\",\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }, {\n        token: \"entity.name\",\n        regex: identifierRe\n      }, {\n        regex: \"\",\n        token: \"empty\",\n        next: \"start\"\n      }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n    this.embedRules(JavaHighlightRules, \"java-\", [{\n      token: \"support.function\",\n      regex: \"\\\\b(insert|modify|retract|update)\\\\b\"\n    }, {\n      token: \"keyword\",\n      regex: \"\\\\bend\\\\b\",\n      next: \"start\"\n    }]);\n  };\n\n  oop.inherits(DroolsHighlightRules, TextHighlightRules);\n  exports.DroolsHighlightRules = DroolsHighlightRules;\n});\nace.define(\"ace/mode/folding/drools\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\", \"ace/token_iterator\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var Range = acequire(\"../../range\").Range;\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n  var TokenIterator = acequire(\"../../token_iterator\").TokenIterator;\n\n  var FoldMode = exports.FoldMode = function () {};\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /\\b(rule|declare|query|when|then)\\b/;\n    this.foldingStopMarker = /\\bend\\b/;\n\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n\n        if (match[1]) {\n          var position = {\n            row: row,\n            column: line.length\n          };\n          var iterator = new TokenIterator(session, position.row, position.column);\n          var seek = \"end\";\n          var token = iterator.getCurrentToken();\n\n          if (token.value == \"when\") {\n            seek = \"then\";\n          }\n\n          while (token) {\n            if (token.value == seek) {\n              return Range.fromPoints(position, {\n                row: iterator.getCurrentTokenRow(),\n                column: iterator.getCurrentTokenColumn()\n              });\n            }\n\n            token = iterator.stepForward();\n          }\n        }\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/drools\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/drools_highlight_rules\", \"ace/mode/folding/drools\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var DroolsHighlightRules = acequire(\"./drools_highlight_rules\").DroolsHighlightRules;\n  var DroolsFoldMode = acequire(\"./folding/drools\").FoldMode;\n\n  var Mode = function () {\n    this.HighlightRules = DroolsHighlightRules;\n    this.foldingRules = new DroolsFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.$id = \"ace/mode/drools\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});","map":{"version":3,"sources":["/Users/ishwarbaisla/Documents/GitHub/admin/node_modules/brace/mode/drools.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","DocCommentHighlightRules","$rules","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","start","getStartRule","next","getEndRule","JavaHighlightRules","keywords","buildinConstants","langClasses","keywordMapper","createKeywordMapper","embedRules","identifierRe","packageIdentifierRe","DroolsHighlightRules","stringRules","basicPreRules","blockCommentRules","returnRule","basicPostRules","concat","Range","BaseFoldMode","FoldMode","TokenIterator","foldingStartMarker","foldingStopMarker","getFoldWidgetRange","session","foldStyle","row","line","getLine","match","i","index","position","column","length","iterator","seek","getCurrentToken","value","fromPoints","getCurrentTokenRow","getCurrentTokenColumn","stepForward","call","prototype","TextMode","Mode","DroolsFoldMode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","$id"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar DocCommentHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment.doc.tag\",\n            regex : \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n        },\n        DocCommentHighlightRules.getTagRule(),\n        {\n            defaultToken : \"comment.doc\",\n            caseInsensitive: true\n        }]\n    };\n};\n\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\nDocCommentHighlightRules.getTagRule = function(start) {\n    return {\n        token : \"comment.doc.tag.storage.type\",\n        regex : \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n};\n\nDocCommentHighlightRules.getStartRule = function(start) {\n    return {\n        token : \"comment.doc\", // doc comment\n        regex : \"\\\\/\\\\*(?=\\\\*)\",\n        next  : start\n    };\n};\n\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token : \"comment.doc\", // closing comment\n        regex : \"\\\\*\\\\/\",\n        next  : start\n    };\n};\n\n\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/java_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar DocCommentHighlightRules = acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar JavaHighlightRules = function() {\n    var keywords = (\n    \"abstract|continue|for|new|switch|\" +\n    \"assert|default|goto|package|synchronized|\" +\n    \"boolean|do|if|private|this|\" +\n    \"break|double|implements|protected|throw|\" +\n    \"byte|else|import|public|throws|\" +\n    \"case|enum|instanceof|return|transient|\" +\n    \"catch|extends|int|short|try|\" +\n    \"char|final|interface|static|void|\" +\n    \"class|finally|long|strictfp|volatile|\" +\n    \"const|float|native|super|while\"\n    );\n\n    var buildinConstants = (\"null|Infinity|NaN|undefined\");\n\n\n    var langClasses = (\n        \"AbstractMethodError|AssertionError|ClassCircularityError|\"+\n        \"ClassFormatError|Deprecated|EnumConstantNotPresentException|\"+\n        \"ExceptionInInitializerError|IllegalAccessError|\"+\n        \"IllegalThreadStateException|InstantiationError|InternalError|\"+\n        \"NegativeArraySizeException|NoSuchFieldError|Override|Process|\"+\n        \"ProcessBuilder|SecurityManager|StringIndexOutOfBoundsException|\"+\n        \"SuppressWarnings|TypeNotPresentException|UnknownError|\"+\n        \"UnsatisfiedLinkError|UnsupportedClassVersionError|VerifyError|\"+\n        \"InstantiationException|IndexOutOfBoundsException|\"+\n        \"ArrayIndexOutOfBoundsException|CloneNotSupportedException|\"+\n        \"NoSuchFieldException|IllegalArgumentException|NumberFormatException|\"+\n        \"SecurityException|Void|InheritableThreadLocal|IllegalStateException|\"+\n        \"InterruptedException|NoSuchMethodException|IllegalAccessException|\"+\n        \"UnsupportedOperationException|Enum|StrictMath|Package|Compiler|\"+\n        \"Readable|Runtime|StringBuilder|Math|IncompatibleClassChangeError|\"+\n        \"NoSuchMethodError|ThreadLocal|RuntimePermission|ArithmeticException|\"+\n        \"NullPointerException|Long|Integer|Short|Byte|Double|Number|Float|\"+\n        \"Character|Boolean|StackTraceElement|Appendable|StringBuffer|\"+\n        \"Iterable|ThreadGroup|Runnable|Thread|IllegalMonitorStateException|\"+\n        \"StackOverflowError|OutOfMemoryError|VirtualMachineError|\"+\n        \"ArrayStoreException|ClassCastException|LinkageError|\"+\n        \"NoClassDefFoundError|ClassNotFoundException|RuntimeException|\"+\n        \"Exception|ThreadDeath|Error|Throwable|System|ClassLoader|\"+\n        \"Cloneable|Class|CharSequence|Comparable|String|Object\"\n    );\n\n    var keywordMapper = this.createKeywordMapper({\n        \"variable.language\": \"this\",\n        \"keyword\": keywords,\n        \"constant.language\": buildinConstants,\n        \"support.function\": langClasses\n    }, \"identifier\");\n\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\",\n                regex : \"\\\\/\\\\/.*$\"\n            },\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            {\n                token : \"comment\", // multi line comment\n                regex : \"\\\\/\\\\*\",\n                next : \"comment\"\n            }, {\n                token : \"string\", // single line\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n            }, {\n                token : \"string\", // single line\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n            }, {\n                token : \"constant.numeric\", // hex\n                regex : /0(?:[xX][0-9a-fA-F][0-9a-fA-F_]*|[bB][01][01_]*)[LlSsDdFfYy]?\\b/\n            }, {\n                token : \"constant.numeric\", // float\n                regex : /[+-]?\\d[\\d_]*(?:(?:\\.[\\d_]*)?(?:[eE][+-]?[\\d_]+)?)?[LlSsDdFfYy]?\\b/\n            }, {\n                token : \"constant.language.boolean\",\n                regex : \"(?:true|false)\\\\b\"\n            }, {\n                token : keywordMapper,\n                regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n            }, {\n                token : \"keyword.operator\",\n                regex : \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\n            }, {\n                token : \"lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"comment\" : [\n            {\n                token : \"comment\", // closing comment\n                regex : \"\\\\*\\\\/\",\n                next : \"start\"\n            }, {\n                defaultToken : \"comment\"\n            }\n        ]\n    };\n\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\n        [ DocCommentHighlightRules.getEndRule(\"start\") ]);\n};\n\noop.inherits(JavaHighlightRules, TextHighlightRules);\n\nexports.JavaHighlightRules = JavaHighlightRules;\n});\n\nace.define(\"ace/mode/drools_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\",\"ace/mode/java_highlight_rules\",\"ace/mode/doc_comment_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\nvar JavaHighlightRules = acequire(\"./java_highlight_rules\").JavaHighlightRules;\nvar DocCommentHighlightRules = acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n\nvar identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\nvar packageIdentifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][\\\\.a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\n\nvar DroolsHighlightRules = function() {\n\n    var keywords = (\"date|effective|expires|lock|on|active|no|loop|auto|focus\" +\n        \"|activation|group|agenda|ruleflow|duration|timer|calendars|refract|direct\" +\n        \"|dialect|salience|enabled|attributes|extends|template\" +\n        \"|function|contains|matches|eval|excludes|soundslike\" +\n        \"|memberof|not|in|or|and|exists|forall|over|from|entry|point|accumulate|acc|collect\" +\n        \"|action|reverse|result|end|init|instanceof|extends|super|boolean|char|byte|short\" +\n        \"|int|long|float|double|this|void|class|new|case|final|if|else|for|while|do\" +\n        \"|default|try|catch|finally|switch|synchronized|return|throw|break|continue|assert\" +\n        \"|modify|static|public|protected|private|abstract|native|transient|volatile\" +\n        \"|strictfp|throws|interface|enum|implements|type|window|trait|no-loop|str\"\n      );\n\n      var langClasses = (\n          \"AbstractMethodError|AssertionError|ClassCircularityError|\"+\n          \"ClassFormatError|Deprecated|EnumConstantNotPresentException|\"+\n          \"ExceptionInInitializerError|IllegalAccessError|\"+\n          \"IllegalThreadStateException|InstantiationError|InternalError|\"+\n          \"NegativeArraySizeException|NoSuchFieldError|Override|Process|\"+\n          \"ProcessBuilder|SecurityManager|StringIndexOutOfBoundsException|\"+\n          \"SuppressWarnings|TypeNotPresentException|UnknownError|\"+\n          \"UnsatisfiedLinkError|UnsupportedClassVersionError|VerifyError|\"+\n          \"InstantiationException|IndexOutOfBoundsException|\"+\n          \"ArrayIndexOutOfBoundsException|CloneNotSupportedException|\"+\n          \"NoSuchFieldException|IllegalArgumentException|NumberFormatException|\"+\n          \"SecurityException|Void|InheritableThreadLocal|IllegalStateException|\"+\n          \"InterruptedException|NoSuchMethodException|IllegalAccessException|\"+\n          \"UnsupportedOperationException|Enum|StrictMath|Package|Compiler|\"+\n          \"Readable|Runtime|StringBuilder|Math|IncompatibleClassChangeError|\"+\n          \"NoSuchMethodError|ThreadLocal|RuntimePermission|ArithmeticException|\"+\n          \"NullPointerException|Long|Integer|Short|Byte|Double|Number|Float|\"+\n          \"Character|Boolean|StackTraceElement|Appendable|StringBuffer|\"+\n          \"Iterable|ThreadGroup|Runnable|Thread|IllegalMonitorStateException|\"+\n          \"StackOverflowError|OutOfMemoryError|VirtualMachineError|\"+\n          \"ArrayStoreException|ClassCastException|LinkageError|\"+\n          \"NoClassDefFoundError|ClassNotFoundException|RuntimeException|\"+\n          \"Exception|ThreadDeath|Error|Throwable|System|ClassLoader|\"+\n          \"Cloneable|Class|CharSequence|Comparable|String|Object\"\n      );\n\n    var keywordMapper = this.createKeywordMapper({\n        \"variable.language\": \"this\",\n        \"keyword\": keywords,\n        \"constant.language\": \"null\",\n        \"support.class\" : langClasses,\n        \"support.function\" : \"retract|update|modify|insert\"\n    }, \"identifier\");\n\n    var stringRules = function() {\n      return [{\n        token : \"string\", // single line\n        regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n      }, {\n        token : \"string\", // single line\n        regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }];\n    };\n\n\n      var basicPreRules = function(blockCommentRules) {\n        return [{\n            token : \"comment\",\n            regex : \"\\\\/\\\\/.*$\"\n        },\n        DocCommentHighlightRules.getStartRule(\"doc-start\"),\n        {\n            token : \"comment\", // multi line comment\n            regex : \"\\\\/\\\\*\",\n            next : blockCommentRules\n        }, {\n            token : \"constant.numeric\", // hex\n            regex : \"0[xX][0-9a-fA-F]+\\\\b\"\n        }, {\n            token : \"constant.numeric\", // float\n            regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n        }, {\n            token : \"constant.language.boolean\",\n            regex : \"(?:true|false)\\\\b\"\n          }];\n      };\n\n      var blockCommentRules = function(returnRule) {\n        return [\n            {\n                token : \"comment.block\", // closing comment\n                regex : \"\\\\*\\\\/\",\n                next : returnRule\n            }, {\n                defaultToken : \"comment.block\"\n            }\n        ];\n      };\n\n      var basicPostRules = function() {\n        return [{\n            token : keywordMapper,\n            regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n        }, {\n            token : \"keyword.operator\",\n            regex : \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\n        }, {\n            token : \"lparen\",\n            regex : \"[[({]\"\n        }, {\n            token : \"rparen\",\n            regex : \"[\\\\])}]\"\n        }, {\n            token : \"text\",\n            regex : \"\\\\s+\"\n        }];\n      };\n\n\n    this.$rules = {\n        \"start\" : [].concat(basicPreRules(\"block.comment\"), [\n              {\n                token : \"entity.name.type\",\n                regex : \"@[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n              }, {\n                token : [\"keyword\",\"text\",\"entity.name.type\"],\n                regex : \"(package)(\\\\s+)(\" + packageIdentifierRe +\")\"\n              }, {\n                token : [\"keyword\",\"text\",\"keyword\",\"text\",\"entity.name.type\"],\n                regex : \"(import)(\\\\s+)(function)(\\\\s+)(\" + packageIdentifierRe +\")\"\n              }, {\n                token : [\"keyword\",\"text\",\"entity.name.type\"],\n                regex : \"(import)(\\\\s+)(\" + packageIdentifierRe +\")\"\n              }, {\n                token : [\"keyword\",\"text\",\"entity.name.type\",\"text\",\"variable\"],\n                regex : \"(global)(\\\\s+)(\" + packageIdentifierRe +\")(\\\\s+)(\" + identifierRe +\")\"\n              }, {\n                token : [\"keyword\",\"text\",\"keyword\",\"text\",\"entity.name.type\"],\n                regex : \"(declare)(\\\\s+)(trait)(\\\\s+)(\" + identifierRe +\")\"\n              }, {\n                token : [\"keyword\",\"text\",\"entity.name.type\"],\n                regex : \"(declare)(\\\\s+)(\" + identifierRe +\")\"\n              }, {\n                token : [\"keyword\",\"text\",\"entity.name.type\"],\n                regex : \"(extends)(\\\\s+)(\" + packageIdentifierRe +\")\"\n              }, {\n                token : [\"keyword\",\"text\"],\n                regex : \"(rule)(\\\\s+)\",\n                next :  \"asset.name\"\n              }],\n              stringRules(),\n              [{\n                token : [\"variable.other\",\"text\",\"text\"],\n                regex : \"(\" + identifierRe + \")(\\\\s*)(:)\"\n              }, {\n                token : [\"keyword\",\"text\"],\n                regex : \"(query)(\\\\s+)\",\n                next :  \"asset.name\"\n              }, {\n                token : [\"keyword\",\"text\"],\n                regex : \"(when)(\\\\s*)\"\n              }, {\n                token : [\"keyword\",\"text\"],\n                regex : \"(then)(\\\\s*)\",\n                next :  \"java-start\"\n              }, {\n                  token : \"paren.lparen\",\n                  regex : /[\\[({]/\n              }, {\n                  token : \"paren.rparen\",\n                  regex : /[\\])}]/\n              }], basicPostRules()),\n        \"block.comment\" : blockCommentRules(\"start\"),\n        \"asset.name\" : [\n            {\n                token : \"entity.name\",\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n            }, {\n                token : \"entity.name\",\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n            }, {\n                token : \"entity.name\",\n                regex : identifierRe\n            }, {\n                regex: \"\",\n                token: \"empty\",\n                next: \"start\"\n            }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\n        [ DocCommentHighlightRules.getEndRule(\"start\") ]);\n\n    this.embedRules(JavaHighlightRules, \"java-\", [\n      {\n       token : \"support.function\",\n       regex: \"\\\\b(insert|modify|retract|update)\\\\b\"\n     }, {\n       token : \"keyword\",\n       regex: \"\\\\bend\\\\b\",\n       next  : \"start\"\n    }]);\n\n};\n\noop.inherits(DroolsHighlightRules, TextHighlightRules);\n\nexports.DroolsHighlightRules = DroolsHighlightRules;\n});\n\nace.define(\"ace/mode/folding/drools\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\",\"ace/token_iterator\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar TokenIterator = acequire(\"../../token_iterator\").TokenIterator;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    this.foldingStartMarker = /\\b(rule|declare|query|when|then)\\b/;\n    this.foldingStopMarker = /\\bend\\b/;\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1]) {\n                var position = {row: row, column: line.length};\n                var iterator = new TokenIterator(session, position.row, position.column);\n                var seek = \"end\";\n                var token = iterator.getCurrentToken();\n                if (token.value == \"when\") {\n                    seek = \"then\";\n                }\n                while (token) {\n                    if (token.value == seek) {\n                        return Range.fromPoints(position ,{\n                            row: iterator.getCurrentTokenRow(),\n                            column: iterator.getCurrentTokenColumn()\n                        });\n                    }\n                    token = iterator.stepForward();\n                }\n            }\n\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/drools\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/drools_highlight_rules\",\"ace/mode/folding/drools\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar DroolsHighlightRules = acequire(\"./drools_highlight_rules\").DroolsHighlightRules;\nvar DroolsFoldMode = acequire(\"./folding/drools\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = DroolsHighlightRules;\n    this.foldingRules = new DroolsFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"//\";\n    this.$id = \"ace/mode/drools\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n\n});\n"]},"metadata":{},"sourceType":"script"}